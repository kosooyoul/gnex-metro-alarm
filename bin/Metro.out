STATIC VAR.	swData           of SYSTEM          0       1       
STATIC VAR.	swData2          of SYSTEM          1       1       
STATIC VAR.	swData3          of SYSTEM          2       1       
STATIC VAR.	swData4          of SYSTEM          3       1       
STATIC VAR.	swWidth          of SYSTEM          4       1       
STATIC VAR.	swHeight         of SYSTEM          5       1       
STATIC VAR.	swFrame          of SYSTEM          6       1       
STATIC VAR.	swFrame2         of SYSTEM          7       1       
STATIC VAR.	swFrame3         of SYSTEM          8       1       
STATIC VAR.	swFrame6         of SYSTEM          9       1       
STATIC VAR.	swVMver          of SYSTEM          10      3       0       
STATIC VAR.	swModel          of SYSTEM          11      8       0       
STATIC VAR.	swSmsRcvBuf      of SYSTEM          12      41      0       
STATIC VAR.	swRsRcvBuf       of SYSTEM          13      128     0       
STATIC VAR.	swRcvBuf         of SYSTEM          14      256     0       
STATIC VAR.	swReserved1      of SYSTEM          15      1       
STATIC VAR.	swReserved2      of SYSTEM          16      1       
STATIC VAR.	swReserved3      of SYSTEM          17      1       
STATIC VAR.	swReserved4      of SYSTEM          18      1       
STATIC VAR.	swSbuf           of SYSTEM          19      1       
STATIC VAR.	StationA         of SYSTEM          20      20      0       
STATIC VAR.	StationB         of SYSTEM          21      20      0       
STATIC VAR.	StationC         of SYSTEM          22      20      0       
STATIC VAR.	NodeA            of SYSTEM          23      27      0       
STATIC VAR.	NodeB            of SYSTEM          24      27      0       
STATIC VAR.	NodeC            of SYSTEM          25      27      0       
STATIC VAR.	Joint            of SYSTEM          26      30      0       
STATIC VAR.	stationName      of SYSTEM          27      30      
 1           2           3           4           5           6           7           8          
 9           10          11          12          13          14          15          16         
 17          18          19          20          21          22          23          24         
 25          26          27          28          29          30         
STATIC VAR.	saveJointList    of SYSTEM          28      60      0       
STATIC VAR.	saveJointListSize of SYSTEM          29      0       0       
STATIC VAR.	foundJoint       of SYSTEM          30      90      0       
STATIC VAR.	foundJointSize   of SYSTEM          31      0       0       
STATIC VAR.	resultPath       of SYSTEM          32      10      0       
STATIC VAR.	resultPathSize   of SYSTEM          33      0       0       
STATIC VAR.	foundJointCount  of SYSTEM          34      0       0       
STATIC VAR.	x                of DrawInt                         35      1       
STATIC VAR.	y                of DrawInt                         36      1       
STATIC VAR.	value            of DrawInt                         37      1       
STATIC VAR.	tempString       of DrawInt                         38      31      1       
STATIC VAR.	id               of GetNodeStationA                 39      1       
STATIC VAR.	id               of GetNodeStationB                 40      1       
STATIC VAR.	id               of GetLineNumber                   41      1       
STATIC VAR.	id               of GetLineIndex                    42      1       
STATIC VAR.	index            of InitJoin                        43      1       
STATIC VAR.	stationIdA       of InitJoin                        44      1       
STATIC VAR.	stationIdB       of InitJoin                        45      1       
STATIC VAR.	stationIdC       of InitJoin                        46      1       
STATIC VAR.	index            of GetJointStationId               47      1       
STATIC VAR.	station          of GetJointStationId               48      1       
STATIC VAR.	i                of InitSubway                      49      1       
STATIC VAR.	size             of Sort                            50      1       
STATIC VAR.	sortData         of Sort                            51      1       
STATIC VAR.	i                of Sort                            52      1       
STATIC VAR.	j                of Sort                            53      1       
STATIC VAR.	interval         of Sort                            54      1       
STATIC VAR.	begin            of IntervalSort                    55      1       
STATIC VAR.	end              of IntervalSort                    56      1       
STATIC VAR.	interval         of IntervalSort                    57      1       
STATIC VAR.	joint            of IntervalSort                    58      3       0       
STATIC VAR.	i                of IntervalSort                    59      1       
STATIC VAR.	j                of IntervalSort                    60      1       
STATIC VAR.	id               of AddSaveJoint                    61      1       
STATIC VAR.	time             of AddSaveJoint                    62      1       
STATIC VAR.	prevId           of AddSaveJoint                    63      1       
STATIC VAR.	id               of FindSaveJointById               64      1       
STATIC VAR.	i                of FindSaveJointById               65      1       
STATIC VAR.	id               of AddFoundJoint                   66      1       
STATIC VAR.	time             of AddFoundJoint                   67      1       
STATIC VAR.	prevId           of AddFoundJoint                   68      1       
STATIC VAR.	duplicatedFoundJointIndex of AddFoundJoint                   69      1       
STATIC VAR.	id               of FindFoundJointById              70      1       
STATIC VAR.	i                of FindFoundJointById              71      1       
STATIC VAR.	i                of DelFrontFoundJoint              72      1       
STATIC VAR.	saveJointListIndex of AddResultPath                   73      1       
STATIC VAR.	loopCount        of ReverseResultPath               74      1       
STATIC VAR.	temp             of ReverseResultPath               75      1       
STATIC VAR.	i                of ReverseResultPath               76      1       
STATIC VAR.	startStation     of FindPath                        77      1       
STATIC VAR.	endStation       of FindPath                        78      1       
STATIC VAR.	prevJointId      of FindPath                        79      1       
STATIC VAR.	result           of FindPath                        80      1       
STATIC VAR.	i                of FindPath                        81      1       
STATIC VAR.	currentStation   of _FindJoint                      82      1       
STATIC VAR.	endStation       of _FindJoint                      83      1       
STATIC VAR.	index            of CopyToSaveJoint                 84      1       
STATIC VAR.	stationStart     of RouteStation                    85      1       
STATIC VAR.	stationEnd       of RouteStation                    86      1       
STATIC VAR.	jointIndex       of _AddFoundJoint                  87      1       
STATIC VAR.	index            of GetFoundJoint                   88      1       
STATIC VAR.	currentId        of FindJoint                       89      1       
STATIC VAR.	currentLine      of FindJoint                       90      1       
STATIC VAR.	currentLineIndex of FindJoint                       91      1       
STATIC VAR.	i                of FindJoint                       92      1       
STATIC VAR.	i                of DrawMetro                       93      1       
FUNCTION	DrawInt          has 3     args.
FUNCTION	GetNodeStationA  has 1     args.
FUNCTION	GetNodeStationB  has 1     args.
FUNCTION	GetLineNumber    has 1     args.
FUNCTION	GetLineIndex     has 1     args.
FUNCTION	InitJoin         has 4     args.
FUNCTION	GetJointStationId has 2     args.
FUNCTION	InitSubway       has 0     args.
FUNCTION	Sort             has 2     args.
FUNCTION	IntervalSort     has 3     args.
FUNCTION	AddSaveJoint     has 3     args.
FUNCTION	InitJointList    has 0     args.
FUNCTION	FindSaveJointById has 1     args.
FUNCTION	AddFoundJoint    has 3     args.
FUNCTION	SortFoundJointByTime has 0     args.
FUNCTION	InitFoundJoint   has 0     args.
FUNCTION	FindFoundJointById has 1     args.
FUNCTION	DelFrontFoundJoint has 0     args.
FUNCTION	GetFrontFoundJointId has 0     args.
FUNCTION	InitResultPath   has 0     args.
FUNCTION	AddResultPath    has 1     args.
FUNCTION	ReverseResultPath has 0     args.
FUNCTION	FindPath         has 2     args.
FUNCTION	_FindJoint       has 2     args.
FUNCTION	CopyToSaveJoint  has 1     args.
FUNCTION	RouteStation     has 2     args.
FUNCTION	_InitFoundJoint  has 0     args.
FUNCTION	_AddFoundJoint   has 1     args.
FUNCTION	GetFoundJoint    has 1     args.
FUNCTION	FindJoint        has 1     args.
FUNCTION	DrawMetro        has 0     args.
FUNCTION	EVENT_TIMEOUT    has 0     args.
MEDIA		%%0     has [ 0 0 0 3 ].
MEDIA		%%1     has [ 1 1 0 6 ].
MEDIA		%%2     has [ 2 2 0 6 ].
MEDIA		%%3     has [ 3 3 0 6 ].
MEDIA		%%4     has [ 4 4 0 6 ].
MEDIA		%%5     has [ 5 5 0 6 ].
MEDIA		%%6     has [ 6 6 0 6 ].
MEDIA		%%7     has [ 7 7 0 6 ].
MEDIA		%%8     has [ 8 8 0 6 ].
MEDIA		%%9     has [ 9 9 0 6 ].
MEDIA		%%10    has [ 10 10 0 6 ].
MEDIA		%%11    has [ 11 11 0 6 ].
MEDIA		%%12    has [ 12 12 0 6 ].
MEDIA		%%13    has [ 13 13 0 6 ].
MEDIA		%%14    has [ 14 14 0 6 ].
MEDIA		%%15    has [ 15 15 0 6 ].
MEDIA		%%16    has [ 16 16 0 6 ].
MEDIA		%%17    has [ 17 17 0 6 ].
MEDIA		%%18    has [ 18 18 0 6 ].
MEDIA		%%19    has [ 19 19 0 6 ].
MEDIA		%%20    has [ 20 20 0 6 ].
MEDIA		%%21    has [ 21 21 0 6 ].
MEDIA		%%22    has [ 22 22 0 6 ].
MEDIA		%%23    has [ 23 23 0 6 ].
MEDIA		%%24    has [ 24 24 0 6 ].
MEDIA		%%25    has [ 25 25 0 6 ].
MEDIA		%%26    has [ 26 26 0 6 ].
MEDIA		%%27    has [ 27 27 0 6 ].
MEDIA		%%28    has [ 28 28 0 6 ].
MEDIA		%%29    has [ 29 29 0 6 ].
MEDIA		%%30    has [ 30 30 0 6 ].
MEDIA		%%31    has [ 31 31 0 0 ].
CODESIZE	2        Bytes in $init           
CODESIZE	48       Bytes in DrawInt         
LABEL		$$1              of GetNodeStationA 
LABEL		$$2              of GetNodeStationA 
LABEL		$$3              of GetNodeStationA 
LABEL		$$4              of GetNodeStationA 
CODESIZE	146      Bytes in GetNodeStationA 
LABEL		$$6              of GetNodeStationB 
LABEL		$$7              of GetNodeStationB 
LABEL		$$8              of GetNodeStationB 
LABEL		$$9              of GetNodeStationB 
CODESIZE	152      Bytes in GetNodeStationB 
CODESIZE	14       Bytes in GetLineNumber   
CODESIZE	26       Bytes in GetLineIndex    
CODESIZE	90       Bytes in InitJoin        
LABEL		$$10             of GetJointStationId
LABEL		$$12             of GetJointStationId
LABEL		$$13             of GetJointStationId
LABEL		$$14             of GetJointStationId
LABEL		$$15             of GetJointStationId
CODESIZE	148      Bytes in GetJointStationId
LABEL		$$16             of InitSubway      
LABEL		$$18             of InitSubway      
LABEL		$$17             of InitSubway      
LABEL		$$20             of InitSubway      
LABEL		$$22             of InitSubway      
LABEL		$$21             of InitSubway      
LABEL		$$24             of InitSubway      
LABEL		$$26             of InitSubway      
LABEL		$$25             of InitSubway      
CODESIZE	542      Bytes in InitSubway      
LABEL		$$28             of Sort            
LABEL		$$30             of Sort            
LABEL		$$34             of Sort            
LABEL		$$32             of Sort            
LABEL		$$31             of Sort            
LABEL		$$29             of Sort            
CODESIZE	134      Bytes in Sort            
LABEL		$$35             of IntervalSort    
LABEL		$$38             of IntervalSort    
LABEL		$$41             of IntervalSort    
LABEL		$$39             of IntervalSort    
LABEL		$$36             of IntervalSort    
CODESIZE	490      Bytes in IntervalSort    
CODESIZE	96       Bytes in AddSaveJoint    
CODESIZE	10       Bytes in InitJointList   
LABEL		$$42             of FindSaveJointById
LABEL		$$44             of FindSaveJointById
LABEL		$$43             of FindSaveJointById
CODESIZE	82       Bytes in FindSaveJointById
LABEL		$$46             of AddFoundJoint   
LABEL		$$47             of AddFoundJoint   
LABEL		$$48             of AddFoundJoint   
CODESIZE	250      Bytes in AddFoundJoint   
CODESIZE	18       Bytes in SortFoundJointByTime
CODESIZE	10       Bytes in InitFoundJoint  
LABEL		$$50             of FindFoundJointById
LABEL		$$52             of FindFoundJointById
LABEL		$$51             of FindFoundJointById
CODESIZE	82       Bytes in FindFoundJointById
LABEL		$$54             of DelFrontFoundJoint
LABEL		$$55             of DelFrontFoundJoint
CODESIZE	174      Bytes in DelFrontFoundJoint
LABEL		$$57             of GetFrontFoundJointId
CODESIZE	28       Bytes in GetFrontFoundJointId
CODESIZE	10       Bytes in InitResultPath  
CODESIZE	20       Bytes in AddResultPath   
LABEL		$$58             of ReverseResultPath
LABEL		$$59             of ReverseResultPath
CODESIZE	116      Bytes in ReverseResultPath
LABEL		$$61             of FindPath        
LABEL		$$63             of FindPath        
LABEL		$$62             of FindPath        
LABEL		$$65             of FindPath        
LABEL		$$67             of FindPath        
LABEL		$$66             of FindPath        
CODESIZE	266      Bytes in FindPath        
CODESIZE	16       Bytes in _FindJoint      
CODESIZE	12       Bytes in CopyToSaveJoint 
CODESIZE	38       Bytes in RouteStation    
CODESIZE	20       Bytes in _InitFoundJoint 
LABEL		$$70             of _AddFoundJoint  
CODESIZE	58       Bytes in _AddFoundJoint  
LABEL		$$71             of GetFoundJoint   
CODESIZE	44       Bytes in GetFoundJoint   
LABEL		$$72             of FindJoint       
LABEL		$$75             of FindJoint       
LABEL		$$77             of FindJoint       
LABEL		$$74             of FindJoint       
LABEL		$$73             of FindJoint       
CODESIZE	216      Bytes in FindJoint       
LABEL		$$80             of DrawMetro       
LABEL		$$81             of DrawMetro       
CODESIZE	298      Bytes in DrawMetro       
CODESIZE	48       Bytes in main            
CODESIZE	18       Bytes in EVENT_TIMEOUT   
000th Func is '$init'
001th Func is 'AddFoundJoint'
002th Func is 'AddResultPath'
003th Func is 'AddSaveJoint'
004th Func is 'CopyToSaveJoint'
005th Func is 'DelFrontFoundJoint'
006th Func is 'DrawInt'
007th Func is 'DrawMetro'
008th Func is 'EVENT_TIMEOUT'
009th Func is 'FindFoundJointById'
010th Func is 'FindJoint'
011th Func is 'FindPath'
012th Func is 'FindSaveJointById'
013th Func is 'GetFoundJoint'
014th Func is 'GetFrontFoundJointId'
015th Func is 'GetJointStationId'
016th Func is 'GetLineIndex'
017th Func is 'GetLineNumber'
018th Func is 'GetNodeStationA'
019th Func is 'GetNodeStationB'
020th Func is 'InitFoundJoint'
021th Func is 'InitJoin'
022th Func is 'InitJointList'
023th Func is 'InitResultPath'
024th Func is 'InitSubway'
025th Func is 'IntervalSort'
026th Func is 'ReverseResultPath'
027th Func is 'RouteStation'
028th Func is 'Sort'
029th Func is 'SortFoundJointByTime'
030th Func is '_AddFoundJoint'
031th Func is '_FindJoint'
032th Func is '_InitFoundJoint'
033th Func is 'main'
-------------------------------------------------
Optimize Function '$init()'
		Code Length : 2 Byte(s).
		Final Optimized Code Length : 2 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawInt()'
		Code Length : 48 Byte(s).
		Final Optimized Code Length : 48 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetNodeStationA()'
		Code Length : 146 Byte(s).
		Final Optimized Code Length : 146 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetNodeStationB()'
		Code Length : 152 Byte(s).
		Final Optimized Code Length : 152 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetLineNumber()'
		Code Length : 14 Byte(s).
		Final Optimized Code Length : 14 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetLineIndex()'
		Code Length : 26 Byte(s).
		Final Optimized Code Length : 26 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitJoin()'
		Code Length : 90 Byte(s).
		Final Optimized Code Length : 90 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetJointStationId()'
		Code Length : 148 Byte(s).
		Final Optimized Code Length : 148 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitSubway()'
		Code Length : 542 Byte(s).
		Final Optimized Code Length : 542 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'Sort()'
		Code Length : 134 Byte(s).
		Final Optimized Code Length : 134 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'IntervalSort()'
		Code Length : 490 Byte(s).
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 484 Byte(s).

		==> addz		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 488 Byte(s).

	ldrz		joint of Function IntervalSort
	pushc		2
	add
		Step.1 Reduced Original Code Length : 478 Byte(s).

		==> addldrzc		58 ( joint of Function IntervalSort )		2
		Step.2 Optimized Code Length : 484 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 474 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 480 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 470 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 476 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 466 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 472 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 462 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 468 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 458 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 464 Byte(s).

	pushz		j of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 454 Byte(s).

		==> addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 460 Byte(s).

	ldrz		joint of Function IntervalSort
	pushc		2
	add
		Step.1 Reduced Original Code Length : 450 Byte(s).

		==> addldrzc		58 ( joint of Function IntervalSort )		2
		Step.2 Optimized Code Length : 456 Byte(s).

	pushz		i of Function IntervalSort
	pushz		interval of Function IntervalSort
	add
		Step.1 Reduced Original Code Length : 446 Byte(s).

		==> addzz		59 ( i of Function IntervalSort )		57 ( interval of Function IntervalSort )
		Step.2 Optimized Code Length : 452 Byte(s).

		Final Optimized Code Length : 452 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'AddSaveJoint()'
		Code Length : 96 Byte(s).
		Final Optimized Code Length : 96 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitJointList()'
		Code Length : 10 Byte(s).
		Final Optimized Code Length : 10 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'FindSaveJointById()'
		Code Length : 82 Byte(s).
		Final Optimized Code Length : 82 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'AddFoundJoint()'
		Code Length : 250 Byte(s).
		Final Optimized Code Length : 250 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SortFoundJointByTime()'
		Code Length : 18 Byte(s).
		Final Optimized Code Length : 18 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitFoundJoint()'
		Code Length : 10 Byte(s).
		Final Optimized Code Length : 10 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'FindFoundJointById()'
		Code Length : 82 Byte(s).
		Final Optimized Code Length : 82 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DelFrontFoundJoint()'
		Code Length : 174 Byte(s).
		Final Optimized Code Length : 174 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetFrontFoundJointId()'
		Code Length : 28 Byte(s).
		Final Optimized Code Length : 28 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitResultPath()'
		Code Length : 10 Byte(s).
		Final Optimized Code Length : 10 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'AddResultPath()'
		Code Length : 20 Byte(s).
		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ReverseResultPath()'
		Code Length : 116 Byte(s).
		Final Optimized Code Length : 116 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'FindPath()'
		Code Length : 266 Byte(s).
		Final Optimized Code Length : 266 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function '_FindJoint()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'CopyToSaveJoint()'
		Code Length : 12 Byte(s).
		Final Optimized Code Length : 12 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RouteStation()'
		Code Length : 38 Byte(s).
		Final Optimized Code Length : 38 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function '_InitFoundJoint()'
		Code Length : 20 Byte(s).
		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function '_AddFoundJoint()'
		Code Length : 58 Byte(s).
		Final Optimized Code Length : 58 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetFoundJoint()'
		Code Length : 44 Byte(s).
		Final Optimized Code Length : 44 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'FindJoint()'
		Code Length : 216 Byte(s).
		Final Optimized Code Length : 216 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawMetro()'
		Code Length : 298 Byte(s).
		Final Optimized Code Length : 298 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'main()'
		Code Length : 48 Byte(s).
		Final Optimized Code Length : 48 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_TIMEOUT()'
		Code Length : 18 Byte(s).
		Final Optimized Code Length : 18 Byte(s).
-------------------------------------------------
FUNC COUNT: 34
Set FUNC ADDRESS : $init [0x00000080]
Set FUNC ADDRESS : AddFoundJoint [0x00000082]
Set FUNC ADDRESS : AddResultPath [0x0000017C]
Set FUNC ADDRESS : AddSaveJoint [0x00000190]
Set FUNC ADDRESS : CopyToSaveJoint [0x000001F0]
Set FUNC ADDRESS : DelFrontFoundJoint [0x000001FC]
Set FUNC ADDRESS : DrawInt [0x000002AA]
Set FUNC ADDRESS : DrawMetro [0x000002DA]
Set FUNC ADDRESS : EVENT_TIMEOUT [0x00000404]
Set FUNC ADDRESS : FindFoundJointById [0x00000416]
Set FUNC ADDRESS : FindJoint [0x00000468]
Set FUNC ADDRESS : FindPath [0x00000540]
Set FUNC ADDRESS : FindSaveJointById [0x0000064A]
Set FUNC ADDRESS : GetFoundJoint [0x0000069C]
Set FUNC ADDRESS : GetFrontFoundJointId [0x000006C8]
Set FUNC ADDRESS : GetJointStationId [0x000006E4]
Set FUNC ADDRESS : GetLineIndex [0x00000778]
Set FUNC ADDRESS : GetLineNumber [0x00000792]
Set FUNC ADDRESS : GetNodeStationA [0x000007A0]
Set FUNC ADDRESS : GetNodeStationB [0x00000832]
Set FUNC ADDRESS : InitFoundJoint [0x000008CA]
Set FUNC ADDRESS : InitJoin [0x000008D4]
Set FUNC ADDRESS : InitJointList [0x0000092E]
Set FUNC ADDRESS : InitResultPath [0x00000938]
Set FUNC ADDRESS : InitSubway [0x00000942]
Set FUNC ADDRESS : IntervalSort [0x00000B60]
Set FUNC ADDRESS : ReverseResultPath [0x00000D24]
Set FUNC ADDRESS : RouteStation [0x00000D98]
Set FUNC ADDRESS : Sort [0x00000DBE]
Set FUNC ADDRESS : SortFoundJointByTime [0x00000E44]
Set FUNC ADDRESS : _AddFoundJoint [0x00000E56]
Set FUNC ADDRESS : _FindJoint [0x00000E90]
Set FUNC ADDRESS : _InitFoundJoint [0x00000EA0]
Set FUNC ADDRESS : main [0x00000EB4]

FUNCTION : $init()
{
	0x00000080 : ret	// , $init, -1 - SAL : 248
}


FUNCTION : AddFoundJoint()
{
	0x00000082 : nop	// , AddFoundJoint, -1 - SAL : 831
	0x00000084 : popz		68 ( prevId of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 832
	0x00000088 : popz		67 ( time of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 833
	0x0000008C : stnz		66 ( id of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 834
	0x00000090 : call		0x00000416	// , AddFoundJoint, -1 - SAL : 835
	0x00000096 : popz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 836
	0x0000009A : pushz		66 ( id of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 837
	0x0000009E : call		0x0000064A	// , AddFoundJoint, -1 - SAL : 838
	0x000000A4 : nejp		-1		0x000000AE	// , AddFoundJoint, -1 - SAL : 839
	0x000000AC : ret	// , AddFoundJoint, -1 - SAL : 840
	0x000000AE : pushz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 841
	0x000000B2 : nejp		-1		0x00000110	// , AddFoundJoint, -1 - SAL : 842
	0x000000BA : pushz		31 ( foundJointSize )	// , AddFoundJoint, -1 - SAL : 843
	0x000000BE : pushc		3	// , AddFoundJoint, -1 - SAL : 844
	0x000000C2 : mult	// , AddFoundJoint, -1 - SAL : 845
	0x000000C4 : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 846
	0x000000C8 : add	// , AddFoundJoint, -1 - SAL : 847
	0x000000CA : pushz		66 ( id of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 848
	0x000000CE : sta	// , AddFoundJoint, -1 - SAL : 849
	0x000000D0 : pushz		31 ( foundJointSize )	// , AddFoundJoint, -1 - SAL : 850
	0x000000D4 : pushc		3	// , AddFoundJoint, -1 - SAL : 851
	0x000000D8 : mult	// , AddFoundJoint, -1 - SAL : 852
	0x000000DA : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 853
	0x000000DE : add	// , AddFoundJoint, -1 - SAL : 854
	0x000000E0 : inc	// , AddFoundJoint, -1 - SAL : 855
	0x000000E2 : pushz		67 ( time of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 856
	0x000000E6 : sta	// , AddFoundJoint, -1 - SAL : 857
	0x000000E8 : pushz		31 ( foundJointSize )	// , AddFoundJoint, -1 - SAL : 858
	0x000000EC : pushc		3	// , AddFoundJoint, -1 - SAL : 859
	0x000000F0 : mult	// , AddFoundJoint, -1 - SAL : 860
	0x000000F2 : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 861
	0x000000F6 : add	// , AddFoundJoint, -1 - SAL : 862
	0x000000F8 : pushc		2	// , AddFoundJoint, -1 - SAL : 863
	0x000000FC : add	// , AddFoundJoint, -1 - SAL : 864
	0x000000FE : pushz		68 ( prevId of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 865
	0x00000102 : sta	// , AddFoundJoint, -1 - SAL : 866
	0x00000104 : incz		31 ( foundJointSize )		1	// , AddFoundJoint, -1 - SAL : 867
	0x0000010A : ujp		0x0000017A	// , AddFoundJoint, -1 - SAL : 868
	0x00000110 : pushz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 869
	0x00000114 : pushc		3	// , AddFoundJoint, -1 - SAL : 870
	0x00000118 : mult	// , AddFoundJoint, -1 - SAL : 871
	0x0000011A : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 872
	0x0000011E : add	// , AddFoundJoint, -1 - SAL : 873
	0x00000120 : inc	// , AddFoundJoint, -1 - SAL : 874
	0x00000122 : ixa	// , AddFoundJoint, -1 - SAL : 875
	0x00000124 : pushz		67 ( time of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 876
	0x00000128 : gt	// , AddFoundJoint, -1 - SAL : 877
	0x0000012A : fjp		0x0000017A	// , AddFoundJoint, -1 - SAL : 878
	0x00000130 : pushz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 879
	0x00000134 : pushc		3	// , AddFoundJoint, -1 - SAL : 880
	0x00000138 : mult	// , AddFoundJoint, -1 - SAL : 881
	0x0000013A : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 882
	0x0000013E : add	// , AddFoundJoint, -1 - SAL : 883
	0x00000140 : pushz		66 ( id of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 884
	0x00000144 : sta	// , AddFoundJoint, -1 - SAL : 885
	0x00000146 : pushz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 886
	0x0000014A : pushc		3	// , AddFoundJoint, -1 - SAL : 887
	0x0000014E : mult	// , AddFoundJoint, -1 - SAL : 888
	0x00000150 : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 889
	0x00000154 : add	// , AddFoundJoint, -1 - SAL : 890
	0x00000156 : inc	// , AddFoundJoint, -1 - SAL : 891
	0x00000158 : pushz		67 ( time of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 892
	0x0000015C : sta	// , AddFoundJoint, -1 - SAL : 893
	0x0000015E : pushz		69 ( duplicatedFoundJointIndex of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 894
	0x00000162 : pushc		3	// , AddFoundJoint, -1 - SAL : 895
	0x00000166 : mult	// , AddFoundJoint, -1 - SAL : 896
	0x00000168 : ldrz		30 ( foundJoint )	// , AddFoundJoint, -1 - SAL : 897
	0x0000016C : add	// , AddFoundJoint, -1 - SAL : 898
	0x0000016E : pushc		2	// , AddFoundJoint, -1 - SAL : 899
	0x00000172 : add	// , AddFoundJoint, -1 - SAL : 900
	0x00000174 : pushz		68 ( prevId of Function AddFoundJoint )	// , AddFoundJoint, -1 - SAL : 901
	0x00000178 : sta	// , AddFoundJoint, -1 - SAL : 902
	0x0000017A : ret	// , AddFoundJoint, -1 - SAL : 903
}


FUNCTION : AddResultPath()
{
	0x0000017C : nop	// , AddResultPath, -1 - SAL : 999
	0x0000017E : stnz		73 ( saveJointListIndex of Function AddResultPath )	// , AddResultPath, -1 - SAL : 1000
	0x00000182 : popi		32 ( resultPath )		33 ( resultPathSize )	// , AddResultPath, -1 - SAL : 1001
	0x00000188 : incz		33 ( resultPathSize )		1	// , AddResultPath, -1 - SAL : 1002
	0x0000018E : ret	// , AddResultPath, -1 - SAL : 1003
}


FUNCTION : AddSaveJoint()
{
	0x00000190 : nop	// , AddSaveJoint, -1 - SAL : 776
	0x00000192 : popz		63 ( prevId of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 777
	0x00000196 : popz		62 ( time of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 778
	0x0000019A : popz		61 ( id of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 779
	0x0000019E : pushz		29 ( saveJointListSize )	// , AddSaveJoint, -1 - SAL : 780
	0x000001A2 : pushc		3	// , AddSaveJoint, -1 - SAL : 781
	0x000001A6 : mult	// , AddSaveJoint, -1 - SAL : 782
	0x000001A8 : ldrz		28 ( saveJointList )	// , AddSaveJoint, -1 - SAL : 783
	0x000001AC : add	// , AddSaveJoint, -1 - SAL : 784
	0x000001AE : pushz		61 ( id of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 785
	0x000001B2 : sta	// , AddSaveJoint, -1 - SAL : 786
	0x000001B4 : pushz		29 ( saveJointListSize )	// , AddSaveJoint, -1 - SAL : 787
	0x000001B8 : pushc		3	// , AddSaveJoint, -1 - SAL : 788
	0x000001BC : mult	// , AddSaveJoint, -1 - SAL : 789
	0x000001BE : ldrz		28 ( saveJointList )	// , AddSaveJoint, -1 - SAL : 790
	0x000001C2 : add	// , AddSaveJoint, -1 - SAL : 791
	0x000001C4 : inc	// , AddSaveJoint, -1 - SAL : 792
	0x000001C6 : pushz		62 ( time of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 793
	0x000001CA : sta	// , AddSaveJoint, -1 - SAL : 794
	0x000001CC : pushz		29 ( saveJointListSize )	// , AddSaveJoint, -1 - SAL : 795
	0x000001D0 : pushc		3	// , AddSaveJoint, -1 - SAL : 796
	0x000001D4 : mult	// , AddSaveJoint, -1 - SAL : 797
	0x000001D6 : ldrz		28 ( saveJointList )	// , AddSaveJoint, -1 - SAL : 798
	0x000001DA : add	// , AddSaveJoint, -1 - SAL : 799
	0x000001DC : pushc		2	// , AddSaveJoint, -1 - SAL : 800
	0x000001E0 : add	// , AddSaveJoint, -1 - SAL : 801
	0x000001E2 : pushz		63 ( prevId of Function AddSaveJoint )	// , AddSaveJoint, -1 - SAL : 802
	0x000001E6 : sta	// , AddSaveJoint, -1 - SAL : 803
	0x000001E8 : incz		29 ( saveJointListSize )		1	// , AddSaveJoint, -1 - SAL : 804
	0x000001EE : ret	// , AddSaveJoint, -1 - SAL : 805
}


FUNCTION : CopyToSaveJoint()
{
	0x000001F0 : nop	// , CopyToSaveJoint, -1 - SAL : 1105
	0x000001F2 : popz		84 ( index of Function CopyToSaveJoint )	// , CopyToSaveJoint, -1 - SAL : 1106
	0x000001F6 : ssp	// , CopyToSaveJoint, -1 - SAL : 1107
	0x000001F8 : rsp	// , CopyToSaveJoint, -1 - SAL : 1108
	0x000001FA : ret	// , CopyToSaveJoint, -1 - SAL : 1109
}


FUNCTION : DelFrontFoundJoint()
{
	0x000001FC : nop	// , DelFrontFoundJoint, -1 - SAL : 934
	0x000001FE : incz		31 ( foundJointSize )		-1	// , DelFrontFoundJoint, -1 - SAL : 935
	0x00000204 : zsetc		72 ( i of Function DelFrontFoundJoint )		0	// , DelFrontFoundJoint, -1 - SAL : 936
	0x0000020A : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 937
	0x0000020E : pushz		31 ( foundJointSize )	// , DelFrontFoundJoint, -1 - SAL : 938
	0x00000212 : lt	// , DelFrontFoundJoint, -1 - SAL : 939
	0x00000214 : fjp		0x000002A8	// , DelFrontFoundJoint, -1 - SAL : 940
	0x0000021A : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 941
	0x0000021E : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 942
	0x00000222 : mult	// , DelFrontFoundJoint, -1 - SAL : 943
	0x00000224 : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 944
	0x00000228 : add	// , DelFrontFoundJoint, -1 - SAL : 945
	0x0000022A : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 946
	0x0000022E : inc	// , DelFrontFoundJoint, -1 - SAL : 947
	0x00000230 : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 948
	0x00000234 : mult	// , DelFrontFoundJoint, -1 - SAL : 949
	0x00000236 : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 950
	0x0000023A : add	// , DelFrontFoundJoint, -1 - SAL : 951
	0x0000023C : ixa	// , DelFrontFoundJoint, -1 - SAL : 952
	0x0000023E : sta	// , DelFrontFoundJoint, -1 - SAL : 953
	0x00000240 : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 954
	0x00000244 : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 955
	0x00000248 : mult	// , DelFrontFoundJoint, -1 - SAL : 956
	0x0000024A : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 957
	0x0000024E : add	// , DelFrontFoundJoint, -1 - SAL : 958
	0x00000250 : inc	// , DelFrontFoundJoint, -1 - SAL : 959
	0x00000252 : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 960
	0x00000256 : inc	// , DelFrontFoundJoint, -1 - SAL : 961
	0x00000258 : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 962
	0x0000025C : mult	// , DelFrontFoundJoint, -1 - SAL : 963
	0x0000025E : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 964
	0x00000262 : add	// , DelFrontFoundJoint, -1 - SAL : 965
	0x00000264 : inc	// , DelFrontFoundJoint, -1 - SAL : 966
	0x00000266 : ixa	// , DelFrontFoundJoint, -1 - SAL : 967
	0x00000268 : sta	// , DelFrontFoundJoint, -1 - SAL : 968
	0x0000026A : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 969
	0x0000026E : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 970
	0x00000272 : mult	// , DelFrontFoundJoint, -1 - SAL : 971
	0x00000274 : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 972
	0x00000278 : add	// , DelFrontFoundJoint, -1 - SAL : 973
	0x0000027A : pushc		2	// , DelFrontFoundJoint, -1 - SAL : 974
	0x0000027E : add	// , DelFrontFoundJoint, -1 - SAL : 975
	0x00000280 : pushz		72 ( i of Function DelFrontFoundJoint )	// , DelFrontFoundJoint, -1 - SAL : 976
	0x00000284 : inc	// , DelFrontFoundJoint, -1 - SAL : 977
	0x00000286 : pushc		3	// , DelFrontFoundJoint, -1 - SAL : 978
	0x0000028A : mult	// , DelFrontFoundJoint, -1 - SAL : 979
	0x0000028C : ldrz		30 ( foundJoint )	// , DelFrontFoundJoint, -1 - SAL : 980
	0x00000290 : add	// , DelFrontFoundJoint, -1 - SAL : 981
	0x00000292 : pushc		2	// , DelFrontFoundJoint, -1 - SAL : 982
	0x00000296 : add	// , DelFrontFoundJoint, -1 - SAL : 983
	0x00000298 : ixa	// , DelFrontFoundJoint, -1 - SAL : 984
	0x0000029A : sta	// , DelFrontFoundJoint, -1 - SAL : 985
	0x0000029C : incz		72 ( i of Function DelFrontFoundJoint )		1	// , DelFrontFoundJoint, -1 - SAL : 986
	0x000002A2 : ujp		0x0000020A	// , DelFrontFoundJoint, -1 - SAL : 987
	0x000002A8 : ret	// , DelFrontFoundJoint, -1 - SAL : 988
}


FUNCTION : DrawInt()
{
	0x000002AA : nop	// , DrawInt, -1 - SAL : 249
	0x000002AC : popz		37 ( value of Function DrawInt )	// , DrawInt, -1 - SAL : 250
	0x000002B0 : popz		36 ( y of Function DrawInt )	// , DrawInt, -1 - SAL : 251
	0x000002B4 : popz		35 ( x of Function DrawInt )	// , DrawInt, -1 - SAL : 252
	0x000002B8 : pushz		38 ( tempString of Function DrawInt )	// , DrawInt, -1 - SAL : 253
	0x000002BC : pushmi		%%0	// , DrawInt, -1 - SAL : 254
	0x000002C0 : pushz		37 ( value of Function DrawInt )	// , DrawInt, -1 - SAL : 255
	0x000002C4 : calls		MakeStr1(174)	// , DrawInt, -1 - SAL : 256
	0x000002C8 : pushz		35 ( x of Function DrawInt )	// , DrawInt, -1 - SAL : 257
	0x000002CC : pushz		36 ( y of Function DrawInt )	// , DrawInt, -1 - SAL : 258
	0x000002D0 : pushz		38 ( tempString of Function DrawInt )	// , DrawInt, -1 - SAL : 259
	0x000002D4 : calls		DrawStr(85)	// , DrawInt, -1 - SAL : 260
	0x000002D8 : ret	// , DrawInt, -1 - SAL : 261
}


FUNCTION : DrawMetro()
{
	0x000002DA : nop	// , DrawMetro, -1 - SAL : 1201
	0x000002DC : pushc		10	// , DrawMetro, -1 - SAL : 1202
	0x000002E0 : pushc		10	// , DrawMetro, -1 - SAL : 1203
	0x000002E4 : pushc		0	// , DrawMetro, -1 - SAL : 1204
	0x000002E8 : call		0x0000069C	// , DrawMetro, -1 - SAL : 1205
	0x000002EE : pushc		0	// , DrawMetro, -1 - SAL : 1206
	0x000002F2 : call		0x000006E4	// , DrawMetro, -1 - SAL : 1207
	0x000002F8 : call		0x000002AA	// , DrawMetro, -1 - SAL : 1208
	0x000002FE : pushc		10	// , DrawMetro, -1 - SAL : 1209
	0x00000302 : pushc		30	// , DrawMetro, -1 - SAL : 1210
	0x00000306 : pushc		1	// , DrawMetro, -1 - SAL : 1211
	0x0000030A : call		0x0000069C	// , DrawMetro, -1 - SAL : 1212
	0x00000310 : pushc		0	// , DrawMetro, -1 - SAL : 1213
	0x00000314 : call		0x000006E4	// , DrawMetro, -1 - SAL : 1214
	0x0000031A : call		0x000002AA	// , DrawMetro, -1 - SAL : 1215
	0x00000320 : pushc		10	// , DrawMetro, -1 - SAL : 1216
	0x00000324 : pushc		50	// , DrawMetro, -1 - SAL : 1217
	0x00000328 : pushc		2	// , DrawMetro, -1 - SAL : 1218
	0x0000032C : call		0x0000069C	// , DrawMetro, -1 - SAL : 1219
	0x00000332 : pushc		0	// , DrawMetro, -1 - SAL : 1220
	0x00000336 : call		0x000006E4	// , DrawMetro, -1 - SAL : 1221
	0x0000033C : call		0x000002AA	// , DrawMetro, -1 - SAL : 1222
	0x00000342 : pushc		10	// , DrawMetro, -1 - SAL : 1223
	0x00000346 : pushc		70	// , DrawMetro, -1 - SAL : 1224
	0x0000034A : pushc		3	// , DrawMetro, -1 - SAL : 1225
	0x0000034E : call		0x0000069C	// , DrawMetro, -1 - SAL : 1226
	0x00000354 : pushc		0	// , DrawMetro, -1 - SAL : 1227
	0x00000358 : call		0x000006E4	// , DrawMetro, -1 - SAL : 1228
	0x0000035E : call		0x000002AA	// , DrawMetro, -1 - SAL : 1229
	0x00000364 : pushc		50	// , DrawMetro, -1 - SAL : 1230
	0x00000368 : pushc		10	// , DrawMetro, -1 - SAL : 1231
	0x0000036C : pushic		30 ( foundJoint )		0	// , DrawMetro, -1 - SAL : 1232
	0x00000372 : call		0x000002AA	// , DrawMetro, -1 - SAL : 1233
	0x00000378 : pushc		50	// , DrawMetro, -1 - SAL : 1234
	0x0000037C : pushc		30	// , DrawMetro, -1 - SAL : 1235
	0x00000380 : pushic		30 ( foundJoint )		3	// , DrawMetro, -1 - SAL : 1236
	0x00000386 : call		0x000002AA	// , DrawMetro, -1 - SAL : 1237
	0x0000038C : pushc		50	// , DrawMetro, -1 - SAL : 1238
	0x00000390 : pushc		50	// , DrawMetro, -1 - SAL : 1239
	0x00000394 : pushic		30 ( foundJoint )		6	// , DrawMetro, -1 - SAL : 1240
	0x0000039A : call		0x000002AA	// , DrawMetro, -1 - SAL : 1241
	0x000003A0 : pushc		50	// , DrawMetro, -1 - SAL : 1242
	0x000003A4 : pushc		70	// , DrawMetro, -1 - SAL : 1243
	0x000003A8 : pushic		30 ( foundJoint )		9	// , DrawMetro, -1 - SAL : 1244
	0x000003AE : call		0x000002AA	// , DrawMetro, -1 - SAL : 1245
	0x000003B4 : zsetc		93 ( i of Function DrawMetro )		0	// , DrawMetro, -1 - SAL : 1246
	0x000003BA : pushz		93 ( i of Function DrawMetro )	// , DrawMetro, -1 - SAL : 1247
	0x000003BE : pushz		31 ( foundJointSize )	// , DrawMetro, -1 - SAL : 1248
	0x000003C2 : lt	// , DrawMetro, -1 - SAL : 1249
	0x000003C4 : fjp		0x00000402	// , DrawMetro, -1 - SAL : 1250
	0x000003CA : pushc		100	// , DrawMetro, -1 - SAL : 1251
	0x000003CE : pushc		10	// , DrawMetro, -1 - SAL : 1252
	0x000003D2 : pushc		16	// , DrawMetro, -1 - SAL : 1253
	0x000003D6 : pushz		93 ( i of Function DrawMetro )	// , DrawMetro, -1 - SAL : 1254
	0x000003DA : mult	// , DrawMetro, -1 - SAL : 1255
	0x000003DC : add	// , DrawMetro, -1 - SAL : 1256
	0x000003DE : pushz		93 ( i of Function DrawMetro )	// , DrawMetro, -1 - SAL : 1257
	0x000003E2 : pushc		3	// , DrawMetro, -1 - SAL : 1258
	0x000003E6 : mult	// , DrawMetro, -1 - SAL : 1259
	0x000003E8 : ldrz		30 ( foundJoint )	// , DrawMetro, -1 - SAL : 1260
	0x000003EC : add	// , DrawMetro, -1 - SAL : 1261
	0x000003EE : ixa	// , DrawMetro, -1 - SAL : 1262
	0x000003F0 : call		0x000002AA	// , DrawMetro, -1 - SAL : 1263
	0x000003F6 : incz		93 ( i of Function DrawMetro )		1	// , DrawMetro, -1 - SAL : 1264
	0x000003FC : ujp		0x000003BA	// , DrawMetro, -1 - SAL : 1265
	0x00000402 : ret	// , DrawMetro, -1 - SAL : 1266
}


FUNCTION : EVENT_TIMEOUT()
{
	0x00000404 : nop	// , EVENT_TIMEOUT, -1 - SAL : 1278
	0x00000406 : calls		ClearWhite(58)	// , EVENT_TIMEOUT, -1 - SAL : 1279
	0x0000040A : call		0x000002DA	// , EVENT_TIMEOUT, -1 - SAL : 1280
	0x00000410 : calls		Flush(95)	// , EVENT_TIMEOUT, -1 - SAL : 1281
	0x00000414 : end	// , EVENT_TIMEOUT, -1 - SAL : 1282
}


FUNCTION : FindFoundJointById()
{
	0x00000416 : nop	// , FindFoundJointById, -1 - SAL : 912
	0x00000418 : popz		70 ( id of Function FindFoundJointById )	// , FindFoundJointById, -1 - SAL : 913
	0x0000041C : zsetc		71 ( i of Function FindFoundJointById )		0	// , FindFoundJointById, -1 - SAL : 914
	0x00000422 : pushz		71 ( i of Function FindFoundJointById )	// , FindFoundJointById, -1 - SAL : 915
	0x00000426 : pushz		31 ( foundJointSize )	// , FindFoundJointById, -1 - SAL : 916
	0x0000042A : lt	// , FindFoundJointById, -1 - SAL : 917
	0x0000042C : fjp		0x00000462	// , FindFoundJointById, -1 - SAL : 918
	0x00000432 : pushz		71 ( i of Function FindFoundJointById )	// , FindFoundJointById, -1 - SAL : 919
	0x00000436 : pushc		3	// , FindFoundJointById, -1 - SAL : 920
	0x0000043A : mult	// , FindFoundJointById, -1 - SAL : 921
	0x0000043C : ldrz		30 ( foundJoint )	// , FindFoundJointById, -1 - SAL : 922
	0x00000440 : add	// , FindFoundJointById, -1 - SAL : 923
	0x00000442 : ixa	// , FindFoundJointById, -1 - SAL : 924
	0x00000444 : pushz		70 ( id of Function FindFoundJointById )	// , FindFoundJointById, -1 - SAL : 925
	0x00000448 : eq	// , FindFoundJointById, -1 - SAL : 926
	0x0000044A : fjp		0x00000456	// , FindFoundJointById, -1 - SAL : 927
	0x00000450 : pushz		71 ( i of Function FindFoundJointById )	// , FindFoundJointById, -1 - SAL : 928
	0x00000454 : ret	// , FindFoundJointById, -1 - SAL : 929
	0x00000456 : incz		71 ( i of Function FindFoundJointById )		1	// , FindFoundJointById, -1 - SAL : 930
	0x0000045C : ujp		0x00000422	// , FindFoundJointById, -1 - SAL : 931
	0x00000462 : pushc		-1	// , FindFoundJointById, -1 - SAL : 932
	0x00000466 : ret	// , FindFoundJointById, -1 - SAL : 933
}


FUNCTION : FindJoint()
{
	0x00000468 : nop	// , FindJoint, -1 - SAL : 1155
	0x0000046A : stnz		89 ( currentId of Function FindJoint )	// , FindJoint, -1 - SAL : 1156
	0x0000046E : call		0x00000792	// , FindJoint, -1 - SAL : 1157
	0x00000474 : popz		90 ( currentLine of Function FindJoint )	// , FindJoint, -1 - SAL : 1158
	0x00000478 : pushz		89 ( currentId of Function FindJoint )	// , FindJoint, -1 - SAL : 1159
	0x0000047C : call		0x00000778	// , FindJoint, -1 - SAL : 1160
	0x00000482 : popz		91 ( currentLineIndex of Function FindJoint )	// , FindJoint, -1 - SAL : 1161
	0x00000486 : zsetc		92 ( i of Function FindJoint )		0	// , FindJoint, -1 - SAL : 1162
	0x0000048C : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1163
	0x00000490 : gejp		10		0x0000053A	// , FindJoint, -1 - SAL : 1164
	0x00000498 : pushz		90 ( currentLine of Function FindJoint )	// , FindJoint, -1 - SAL : 1165
	0x0000049C : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1166
	0x000004A0 : pushc		0	// , FindJoint, -1 - SAL : 1167
	0x000004A4 : call		0x000006E4	// , FindJoint, -1 - SAL : 1168
	0x000004AA : call		0x00000792	// , FindJoint, -1 - SAL : 1169
	0x000004B0 : eq	// , FindJoint, -1 - SAL : 1170
	0x000004B2 : fjp		0x000004CC	// , FindJoint, -1 - SAL : 1171
	0x000004B8 : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1172
	0x000004BC : call		0x00000E56	// , FindJoint, -1 - SAL : 1173
	0x000004C2 : popz		17 ( swReserved3 )	// , FindJoint, -1 - SAL : 1174
	0x000004C6 : ujp		0x0000052E	// , FindJoint, -1 - SAL : 1175
	0x000004CC : pushz		90 ( currentLine of Function FindJoint )	// , FindJoint, -1 - SAL : 1176
	0x000004D0 : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1177
	0x000004D4 : pushc		1	// , FindJoint, -1 - SAL : 1178
	0x000004D8 : call		0x000006E4	// , FindJoint, -1 - SAL : 1179
	0x000004DE : call		0x00000792	// , FindJoint, -1 - SAL : 1180
	0x000004E4 : eq	// , FindJoint, -1 - SAL : 1181
	0x000004E6 : fjp		0x00000500	// , FindJoint, -1 - SAL : 1182
	0x000004EC : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1183
	0x000004F0 : call		0x00000E56	// , FindJoint, -1 - SAL : 1184
	0x000004F6 : popz		17 ( swReserved3 )	// , FindJoint, -1 - SAL : 1185
	0x000004FA : ujp		0x0000052E	// , FindJoint, -1 - SAL : 1186
	0x00000500 : pushz		90 ( currentLine of Function FindJoint )	// , FindJoint, -1 - SAL : 1187
	0x00000504 : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1188
	0x00000508 : pushc		2	// , FindJoint, -1 - SAL : 1189
	0x0000050C : call		0x000006E4	// , FindJoint, -1 - SAL : 1190
	0x00000512 : call		0x00000792	// , FindJoint, -1 - SAL : 1191
	0x00000518 : eq	// , FindJoint, -1 - SAL : 1192
	0x0000051A : fjp		0x0000052E	// , FindJoint, -1 - SAL : 1193
	0x00000520 : pushz		92 ( i of Function FindJoint )	// , FindJoint, -1 - SAL : 1194
	0x00000524 : call		0x00000E56	// , FindJoint, -1 - SAL : 1195
	0x0000052A : popz		17 ( swReserved3 )	// , FindJoint, -1 - SAL : 1196
	0x0000052E : incz		92 ( i of Function FindJoint )		1	// , FindJoint, -1 - SAL : 1197
	0x00000534 : ujp		0x0000048C	// , FindJoint, -1 - SAL : 1198
	0x0000053A : pushc		-1	// , FindJoint, -1 - SAL : 1199
	0x0000053E : ret	// , FindJoint, -1 - SAL : 1200
}


FUNCTION : FindPath()
{
	0x00000540 : nop	// , FindPath, -1 - SAL : 1037
	0x00000542 : popz		78 ( endStation of Function FindPath )	// , FindPath, -1 - SAL : 1038
	0x00000546 : popz		77 ( startStation of Function FindPath )	// , FindPath, -1 - SAL : 1039
	0x0000054A : zsetz		79 ( prevJointId of Function FindPath )		78 ( endStation of Function FindPath )	// , FindPath, -1 - SAL : 1040
	0x00000550 : zsetc		80 ( result of Function FindPath )		0	// , FindPath, -1 - SAL : 1041
	0x00000556 : call		0x0000092E	// , FindPath, -1 - SAL : 1042
	0x0000055C : call		0x000008CA	// , FindPath, -1 - SAL : 1043
	0x00000562 : call		0x00000938	// , FindPath, -1 - SAL : 1044
	0x00000568 : pushz		77 ( startStation of Function FindPath )	// , FindPath, -1 - SAL : 1045
	0x0000056C : pushz		78 ( endStation of Function FindPath )	// , FindPath, -1 - SAL : 1046
	0x00000570 : call		0x00000E90	// , FindPath, -1 - SAL : 1047
	0x00000576 : popz		80 ( result of Function FindPath )	// , FindPath, -1 - SAL : 1048
	0x0000057A : pushz		80 ( result of Function FindPath )	// , FindPath, -1 - SAL : 1049
	0x0000057E : eqjp		1		0x000005BA	// , FindPath, -1 - SAL : 1050
	0x00000586 : call		0x00000E44	// , FindPath, -1 - SAL : 1051
	0x0000058C : call		0x000006C8	// , FindPath, -1 - SAL : 1052
	0x00000592 : nejp		-1		0x000005A0	// , FindPath, -1 - SAL : 1053
	0x0000059A : pushc		0	// , FindPath, -1 - SAL : 1054
	0x0000059E : ret	// , FindPath, -1 - SAL : 1055
	0x000005A0 : call		0x000006C8	// , FindPath, -1 - SAL : 1056
	0x000005A6 : pushz		78 ( endStation of Function FindPath )	// , FindPath, -1 - SAL : 1057
	0x000005AA : call		0x00000E90	// , FindPath, -1 - SAL : 1058
	0x000005B0 : popz		80 ( result of Function FindPath )	// , FindPath, -1 - SAL : 1059
	0x000005B4 : ujp		0x0000057A	// , FindPath, -1 - SAL : 1060
	0x000005BA : pushz		29 ( saveJointListSize )	// , FindPath, -1 - SAL : 1061
	0x000005BE : dec	// , FindPath, -1 - SAL : 1062
	0x000005C0 : popz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1063
	0x000005C4 : pushz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1064
	0x000005C8 : ltjp		0		0x0000063E	// , FindPath, -1 - SAL : 1065
	0x000005D0 : pushz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1066
	0x000005D4 : pushc		3	// , FindPath, -1 - SAL : 1067
	0x000005D8 : mult	// , FindPath, -1 - SAL : 1068
	0x000005DA : ldrz		28 ( saveJointList )	// , FindPath, -1 - SAL : 1069
	0x000005DE : add	// , FindPath, -1 - SAL : 1070
	0x000005E0 : ixa	// , FindPath, -1 - SAL : 1071
	0x000005E2 : pushz		79 ( prevJointId of Function FindPath )	// , FindPath, -1 - SAL : 1072
	0x000005E6 : eq	// , FindPath, -1 - SAL : 1073
	0x000005E8 : fjp		0x00000632	// , FindPath, -1 - SAL : 1074
	0x000005EE : pushz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1075
	0x000005F2 : call		0x0000017C	// , FindPath, -1 - SAL : 1076
	0x000005F8 : pushz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1077
	0x000005FC : pushc		3	// , FindPath, -1 - SAL : 1078
	0x00000600 : mult	// , FindPath, -1 - SAL : 1079
	0x00000602 : ldrz		28 ( saveJointList )	// , FindPath, -1 - SAL : 1080
	0x00000606 : add	// , FindPath, -1 - SAL : 1081
	0x00000608 : pushc		2	// , FindPath, -1 - SAL : 1082
	0x0000060C : add	// , FindPath, -1 - SAL : 1083
	0x0000060E : ixa	// , FindPath, -1 - SAL : 1084
	0x00000610 : popz		79 ( prevJointId of Function FindPath )	// , FindPath, -1 - SAL : 1085
	0x00000614 : pushz		81 ( i of Function FindPath )	// , FindPath, -1 - SAL : 1086
	0x00000618 : pushc		3	// , FindPath, -1 - SAL : 1087
	0x0000061C : mult	// , FindPath, -1 - SAL : 1088
	0x0000061E : ldrz		28 ( saveJointList )	// , FindPath, -1 - SAL : 1089
	0x00000622 : add	// , FindPath, -1 - SAL : 1090
	0x00000624 : ixa	// , FindPath, -1 - SAL : 1091
	0x00000626 : pushz		77 ( startStation of Function FindPath )	// , FindPath, -1 - SAL : 1092
	0x0000062A : eq	// , FindPath, -1 - SAL : 1093
	0x0000062C : tjp		0x0000063E	// , FindPath, -1 - SAL : 1094
	0x00000632 : incz		81 ( i of Function FindPath )		-1	// , FindPath, -1 - SAL : 1095
	0x00000638 : ujp		0x000005C4	// , FindPath, -1 - SAL : 1096
	0x0000063E : call		0x00000D24	// , FindPath, -1 - SAL : 1097
	0x00000644 : pushc		1	// , FindPath, -1 - SAL : 1098
	0x00000648 : ret	// , FindPath, -1 - SAL : 1099
}


FUNCTION : FindSaveJointById()
{
	0x0000064A : nop	// , FindSaveJointById, -1 - SAL : 809
	0x0000064C : popz		64 ( id of Function FindSaveJointById )	// , FindSaveJointById, -1 - SAL : 810
	0x00000650 : zsetc		65 ( i of Function FindSaveJointById )		0	// , FindSaveJointById, -1 - SAL : 811
	0x00000656 : pushz		65 ( i of Function FindSaveJointById )	// , FindSaveJointById, -1 - SAL : 812
	0x0000065A : pushz		29 ( saveJointListSize )	// , FindSaveJointById, -1 - SAL : 813
	0x0000065E : lt	// , FindSaveJointById, -1 - SAL : 814
	0x00000660 : fjp		0x00000696	// , FindSaveJointById, -1 - SAL : 815
	0x00000666 : pushz		65 ( i of Function FindSaveJointById )	// , FindSaveJointById, -1 - SAL : 816
	0x0000066A : pushc		3	// , FindSaveJointById, -1 - SAL : 817
	0x0000066E : mult	// , FindSaveJointById, -1 - SAL : 818
	0x00000670 : ldrz		28 ( saveJointList )	// , FindSaveJointById, -1 - SAL : 819
	0x00000674 : add	// , FindSaveJointById, -1 - SAL : 820
	0x00000676 : ixa	// , FindSaveJointById, -1 - SAL : 821
	0x00000678 : pushz		64 ( id of Function FindSaveJointById )	// , FindSaveJointById, -1 - SAL : 822
	0x0000067C : eq	// , FindSaveJointById, -1 - SAL : 823
	0x0000067E : fjp		0x0000068A	// , FindSaveJointById, -1 - SAL : 824
	0x00000684 : pushz		65 ( i of Function FindSaveJointById )	// , FindSaveJointById, -1 - SAL : 825
	0x00000688 : ret	// , FindSaveJointById, -1 - SAL : 826
	0x0000068A : incz		65 ( i of Function FindSaveJointById )		1	// , FindSaveJointById, -1 - SAL : 827
	0x00000690 : ujp		0x00000656	// , FindSaveJointById, -1 - SAL : 828
	0x00000696 : pushc		-1	// , FindSaveJointById, -1 - SAL : 829
	0x0000069A : ret	// , FindSaveJointById, -1 - SAL : 830
}


FUNCTION : GetFoundJoint()
{
	0x0000069C : nop	// , GetFoundJoint, -1 - SAL : 1141
	0x0000069E : stnz		88 ( index of Function GetFoundJoint )	// , GetFoundJoint, -1 - SAL : 1142
	0x000006A2 : pushz		34 ( foundJointCount )	// , GetFoundJoint, -1 - SAL : 1143
	0x000006A6 : lt	// , GetFoundJoint, -1 - SAL : 1144
	0x000006A8 : fjp		0x000006C2	// , GetFoundJoint, -1 - SAL : 1145
	0x000006AE : pushz		88 ( index of Function GetFoundJoint )	// , GetFoundJoint, -1 - SAL : 1146
	0x000006B2 : pushc		3	// , GetFoundJoint, -1 - SAL : 1147
	0x000006B6 : mult	// , GetFoundJoint, -1 - SAL : 1148
	0x000006B8 : ldrz		30 ( foundJoint )	// , GetFoundJoint, -1 - SAL : 1149
	0x000006BC : add	// , GetFoundJoint, -1 - SAL : 1150
	0x000006BE : ixa	// , GetFoundJoint, -1 - SAL : 1151
	0x000006C0 : ret	// , GetFoundJoint, -1 - SAL : 1152
	0x000006C2 : pushc		-1	// , GetFoundJoint, -1 - SAL : 1153
	0x000006C6 : ret	// , GetFoundJoint, -1 - SAL : 1154
}


FUNCTION : GetFrontFoundJointId()
{
	0x000006C8 : nop	// , GetFrontFoundJointId, -1 - SAL : 989
	0x000006CA : pushz		31 ( foundJointSize )	// , GetFrontFoundJointId, -1 - SAL : 990
	0x000006CE : lejp		0		0x000006DE	// , GetFrontFoundJointId, -1 - SAL : 991
	0x000006D6 : pushic		30 ( foundJoint )		0	// , GetFrontFoundJointId, -1 - SAL : 992
	0x000006DC : ret	// , GetFrontFoundJointId, -1 - SAL : 993
	0x000006DE : pushc		-1	// , GetFrontFoundJointId, -1 - SAL : 994
	0x000006E2 : ret	// , GetFrontFoundJointId, -1 - SAL : 995
}


FUNCTION : GetJointStationId()
{
	0x000006E4 : nop	// , GetJointStationId, -1 - SAL : 391
	0x000006E6 : popz		48 ( station of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 392
	0x000006EA : stnz		47 ( index of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 393
	0x000006EE : nejp		-1		0x000006FC	// , GetJointStationId, -1 - SAL : 394
	0x000006F6 : pushc		-1	// , GetJointStationId, -1 - SAL : 395
	0x000006FA : ret	// , GetJointStationId, -1 - SAL : 396
	0x000006FC : ssp	// , GetJointStationId, -1 - SAL : 397
	0x000006FE : pushz		48 ( station of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 398
	0x00000702 : dup	// , GetJointStationId, -1 - SAL : 399
	0x00000704 : eqjp		0		0x00000726	// , GetJointStationId, -1 - SAL : 400
	0x0000070C : dup	// , GetJointStationId, -1 - SAL : 401
	0x0000070E : eqjp		1		0x0000073C	// , GetJointStationId, -1 - SAL : 402
	0x00000716 : dup	// , GetJointStationId, -1 - SAL : 403
	0x00000718 : eqjp		2		0x00000754	// , GetJointStationId, -1 - SAL : 404
	0x00000720 : ujp		0x00000770	// , GetJointStationId, -1 - SAL : 405
	0x00000726 : rsp	// , GetJointStationId, -1 - SAL : 406
	0x00000728 : pushz		47 ( index of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 407
	0x0000072C : pushc		3	// , GetJointStationId, -1 - SAL : 408
	0x00000730 : mult	// , GetJointStationId, -1 - SAL : 409
	0x00000732 : ldrz		26 ( Joint )	// , GetJointStationId, -1 - SAL : 410
	0x00000736 : add	// , GetJointStationId, -1 - SAL : 411
	0x00000738 : ixa	// , GetJointStationId, -1 - SAL : 412
	0x0000073A : ret	// , GetJointStationId, -1 - SAL : 413
	0x0000073C : rsp	// , GetJointStationId, -1 - SAL : 414
	0x0000073E : pushz		47 ( index of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 415
	0x00000742 : pushc		3	// , GetJointStationId, -1 - SAL : 416
	0x00000746 : mult	// , GetJointStationId, -1 - SAL : 417
	0x00000748 : ldrz		26 ( Joint )	// , GetJointStationId, -1 - SAL : 418
	0x0000074C : add	// , GetJointStationId, -1 - SAL : 419
	0x0000074E : inc	// , GetJointStationId, -1 - SAL : 420
	0x00000750 : ixa	// , GetJointStationId, -1 - SAL : 421
	0x00000752 : ret	// , GetJointStationId, -1 - SAL : 422
	0x00000754 : rsp	// , GetJointStationId, -1 - SAL : 423
	0x00000756 : pushz		47 ( index of Function GetJointStationId )	// , GetJointStationId, -1 - SAL : 424
	0x0000075A : pushc		3	// , GetJointStationId, -1 - SAL : 425
	0x0000075E : mult	// , GetJointStationId, -1 - SAL : 426
	0x00000760 : ldrz		26 ( Joint )	// , GetJointStationId, -1 - SAL : 427
	0x00000764 : add	// , GetJointStationId, -1 - SAL : 428
	0x00000766 : pushc		2	// , GetJointStationId, -1 - SAL : 429
	0x0000076A : add	// , GetJointStationId, -1 - SAL : 430
	0x0000076C : ixa	// , GetJointStationId, -1 - SAL : 431
	0x0000076E : ret	// , GetJointStationId, -1 - SAL : 432
	0x00000770 : rsp	// , GetJointStationId, -1 - SAL : 433
	0x00000772 : pushc		-1	// , GetJointStationId, -1 - SAL : 434
	0x00000776 : ret	// , GetJointStationId, -1 - SAL : 435
}


FUNCTION : GetLineIndex()
{
	0x00000778 : nop	// , GetLineIndex, -1 - SAL : 354
	0x0000077A : stnz		42 ( id of Function GetLineIndex )	// , GetLineIndex, -1 - SAL : 355
	0x0000077E : pushz		42 ( id of Function GetLineIndex )	// , GetLineIndex, -1 - SAL : 356
	0x00000782 : call		0x00000792	// , GetLineIndex, -1 - SAL : 357
	0x00000788 : pushc		100	// , GetLineIndex, -1 - SAL : 358
	0x0000078C : mult	// , GetLineIndex, -1 - SAL : 359
	0x0000078E : sub	// , GetLineIndex, -1 - SAL : 360
	0x00000790 : ret	// , GetLineIndex, -1 - SAL : 361
}


FUNCTION : GetLineNumber()
{
	0x00000792 : nop	// , GetLineNumber, -1 - SAL : 349
	0x00000794 : stnz		41 ( id of Function GetLineNumber )	// , GetLineNumber, -1 - SAL : 350
	0x00000798 : pushc		100	// , GetLineNumber, -1 - SAL : 351
	0x0000079C : div	// , GetLineNumber, -1 - SAL : 352
	0x0000079E : ret	// , GetLineNumber, -1 - SAL : 353
}


FUNCTION : GetNodeStationA()
{
	0x000007A0 : nop	// , GetNodeStationA, -1 - SAL : 262
	0x000007A2 : popz		39 ( id of Function GetNodeStationA )	// , GetNodeStationA, -1 - SAL : 263
	0x000007A6 : ssp	// , GetNodeStationA, -1 - SAL : 264
	0x000007A8 : pushz		39 ( id of Function GetNodeStationA )	// , GetNodeStationA, -1 - SAL : 265
	0x000007AC : call		0x00000792	// , GetNodeStationA, -1 - SAL : 266
	0x000007B2 : dup	// , GetNodeStationA, -1 - SAL : 267
	0x000007B4 : eqjp		1		0x000007D6	// , GetNodeStationA, -1 - SAL : 268
	0x000007BC : dup	// , GetNodeStationA, -1 - SAL : 269
	0x000007BE : eqjp		2		0x000007F2	// , GetNodeStationA, -1 - SAL : 270
	0x000007C6 : dup	// , GetNodeStationA, -1 - SAL : 271
	0x000007C8 : eqjp		3		0x0000080E	// , GetNodeStationA, -1 - SAL : 272
	0x000007D0 : ujp		0x0000082A	// , GetNodeStationA, -1 - SAL : 273
	0x000007D6 : rsp	// , GetNodeStationA, -1 - SAL : 274
	0x000007D8 : pushz		39 ( id of Function GetNodeStationA )	// , GetNodeStationA, -1 - SAL : 275
	0x000007DC : call		0x00000778	// , GetNodeStationA, -1 - SAL : 276
	0x000007E2 : pushc		3	// , GetNodeStationA, -1 - SAL : 277
	0x000007E6 : mult	// , GetNodeStationA, -1 - SAL : 278
	0x000007E8 : ldrz		23 ( NodeA )	// , GetNodeStationA, -1 - SAL : 279
	0x000007EC : add	// , GetNodeStationA, -1 - SAL : 280
	0x000007EE : ixa	// , GetNodeStationA, -1 - SAL : 281
	0x000007F0 : ret	// , GetNodeStationA, -1 - SAL : 282
	0x000007F2 : rsp	// , GetNodeStationA, -1 - SAL : 283
	0x000007F4 : pushz		39 ( id of Function GetNodeStationA )	// , GetNodeStationA, -1 - SAL : 284
	0x000007F8 : call		0x00000778	// , GetNodeStationA, -1 - SAL : 285
	0x000007FE : pushc		3	// , GetNodeStationA, -1 - SAL : 286
	0x00000802 : mult	// , GetNodeStationA, -1 - SAL : 287
	0x00000804 : ldrz		24 ( NodeB )	// , GetNodeStationA, -1 - SAL : 288
	0x00000808 : add	// , GetNodeStationA, -1 - SAL : 289
	0x0000080A : ixa	// , GetNodeStationA, -1 - SAL : 290
	0x0000080C : ret	// , GetNodeStationA, -1 - SAL : 291
	0x0000080E : rsp	// , GetNodeStationA, -1 - SAL : 292
	0x00000810 : pushz		39 ( id of Function GetNodeStationA )	// , GetNodeStationA, -1 - SAL : 293
	0x00000814 : call		0x00000778	// , GetNodeStationA, -1 - SAL : 294
	0x0000081A : pushc		3	// , GetNodeStationA, -1 - SAL : 295
	0x0000081E : mult	// , GetNodeStationA, -1 - SAL : 296
	0x00000820 : ldrz		25 ( NodeC )	// , GetNodeStationA, -1 - SAL : 297
	0x00000824 : add	// , GetNodeStationA, -1 - SAL : 298
	0x00000826 : ixa	// , GetNodeStationA, -1 - SAL : 299
	0x00000828 : ret	// , GetNodeStationA, -1 - SAL : 300
	0x0000082A : rsp	// , GetNodeStationA, -1 - SAL : 301
	0x0000082C : pushc		-1	// , GetNodeStationA, -1 - SAL : 302
	0x00000830 : ret	// , GetNodeStationA, -1 - SAL : 303
}


FUNCTION : GetNodeStationB()
{
	0x00000832 : nop	// , GetNodeStationB, -1 - SAL : 304
	0x00000834 : popz		40 ( id of Function GetNodeStationB )	// , GetNodeStationB, -1 - SAL : 305
	0x00000838 : ssp	// , GetNodeStationB, -1 - SAL : 306
	0x0000083A : pushz		40 ( id of Function GetNodeStationB )	// , GetNodeStationB, -1 - SAL : 307
	0x0000083E : call		0x00000792	// , GetNodeStationB, -1 - SAL : 308
	0x00000844 : dup	// , GetNodeStationB, -1 - SAL : 309
	0x00000846 : eqjp		1		0x00000868	// , GetNodeStationB, -1 - SAL : 310
	0x0000084E : dup	// , GetNodeStationB, -1 - SAL : 311
	0x00000850 : eqjp		2		0x00000886	// , GetNodeStationB, -1 - SAL : 312
	0x00000858 : dup	// , GetNodeStationB, -1 - SAL : 313
	0x0000085A : eqjp		3		0x000008A4	// , GetNodeStationB, -1 - SAL : 314
	0x00000862 : ujp		0x000008C2	// , GetNodeStationB, -1 - SAL : 315
	0x00000868 : rsp	// , GetNodeStationB, -1 - SAL : 316
	0x0000086A : pushz		40 ( id of Function GetNodeStationB )	// , GetNodeStationB, -1 - SAL : 317
	0x0000086E : call		0x00000778	// , GetNodeStationB, -1 - SAL : 318
	0x00000874 : pushc		3	// , GetNodeStationB, -1 - SAL : 319
	0x00000878 : mult	// , GetNodeStationB, -1 - SAL : 320
	0x0000087A : ldrz		23 ( NodeA )	// , GetNodeStationB, -1 - SAL : 321
	0x0000087E : add	// , GetNodeStationB, -1 - SAL : 322
	0x00000880 : inc	// , GetNodeStationB, -1 - SAL : 323
	0x00000882 : ixa	// , GetNodeStationB, -1 - SAL : 324
	0x00000884 : ret	// , GetNodeStationB, -1 - SAL : 325
	0x00000886 : rsp	// , GetNodeStationB, -1 - SAL : 326
	0x00000888 : pushz		40 ( id of Function GetNodeStationB )	// , GetNodeStationB, -1 - SAL : 327
	0x0000088C : call		0x00000778	// , GetNodeStationB, -1 - SAL : 328
	0x00000892 : pushc		3	// , GetNodeStationB, -1 - SAL : 329
	0x00000896 : mult	// , GetNodeStationB, -1 - SAL : 330
	0x00000898 : ldrz		24 ( NodeB )	// , GetNodeStationB, -1 - SAL : 331
	0x0000089C : add	// , GetNodeStationB, -1 - SAL : 332
	0x0000089E : inc	// , GetNodeStationB, -1 - SAL : 333
	0x000008A0 : ixa	// , GetNodeStationB, -1 - SAL : 334
	0x000008A2 : ret	// , GetNodeStationB, -1 - SAL : 335
	0x000008A4 : rsp	// , GetNodeStationB, -1 - SAL : 336
	0x000008A6 : pushz		40 ( id of Function GetNodeStationB )	// , GetNodeStationB, -1 - SAL : 337
	0x000008AA : call		0x00000778	// , GetNodeStationB, -1 - SAL : 338
	0x000008B0 : pushc		3	// , GetNodeStationB, -1 - SAL : 339
	0x000008B4 : mult	// , GetNodeStationB, -1 - SAL : 340
	0x000008B6 : ldrz		25 ( NodeC )	// , GetNodeStationB, -1 - SAL : 341
	0x000008BA : add	// , GetNodeStationB, -1 - SAL : 342
	0x000008BC : inc	// , GetNodeStationB, -1 - SAL : 343
	0x000008BE : ixa	// , GetNodeStationB, -1 - SAL : 344
	0x000008C0 : ret	// , GetNodeStationB, -1 - SAL : 345
	0x000008C2 : rsp	// , GetNodeStationB, -1 - SAL : 346
	0x000008C4 : pushc		-1	// , GetNodeStationB, -1 - SAL : 347
	0x000008C8 : ret	// , GetNodeStationB, -1 - SAL : 348
}


FUNCTION : InitFoundJoint()
{
	0x000008CA : nop	// , InitFoundJoint, -1 - SAL : 909
	0x000008CC : zsetc		31 ( foundJointSize )		0	// , InitFoundJoint, -1 - SAL : 910
	0x000008D2 : ret	// , InitFoundJoint, -1 - SAL : 911
}


FUNCTION : InitJoin()
{
	0x000008D4 : nop	// , InitJoin, -1 - SAL : 362
	0x000008D6 : popz		46 ( stationIdC of Function InitJoin )	// , InitJoin, -1 - SAL : 363
	0x000008DA : popz		45 ( stationIdB of Function InitJoin )	// , InitJoin, -1 - SAL : 364
	0x000008DE : popz		44 ( stationIdA of Function InitJoin )	// , InitJoin, -1 - SAL : 365
	0x000008E2 : stnz		43 ( index of Function InitJoin )	// , InitJoin, -1 - SAL : 366
	0x000008E6 : pushc		3	// , InitJoin, -1 - SAL : 367
	0x000008EA : mult	// , InitJoin, -1 - SAL : 368
	0x000008EC : ldrz		26 ( Joint )	// , InitJoin, -1 - SAL : 369
	0x000008F0 : add	// , InitJoin, -1 - SAL : 370
	0x000008F2 : pushz		44 ( stationIdA of Function InitJoin )	// , InitJoin, -1 - SAL : 371
	0x000008F6 : sta	// , InitJoin, -1 - SAL : 372
	0x000008F8 : pushz		43 ( index of Function InitJoin )	// , InitJoin, -1 - SAL : 373
	0x000008FC : pushc		3	// , InitJoin, -1 - SAL : 374
	0x00000900 : mult	// , InitJoin, -1 - SAL : 375
	0x00000902 : ldrz		26 ( Joint )	// , InitJoin, -1 - SAL : 376
	0x00000906 : add	// , InitJoin, -1 - SAL : 377
	0x00000908 : inc	// , InitJoin, -1 - SAL : 378
	0x0000090A : pushz		45 ( stationIdB of Function InitJoin )	// , InitJoin, -1 - SAL : 379
	0x0000090E : sta	// , InitJoin, -1 - SAL : 380
	0x00000910 : pushz		43 ( index of Function InitJoin )	// , InitJoin, -1 - SAL : 381
	0x00000914 : pushc		3	// , InitJoin, -1 - SAL : 382
	0x00000918 : mult	// , InitJoin, -1 - SAL : 383
	0x0000091A : ldrz		26 ( Joint )	// , InitJoin, -1 - SAL : 384
	0x0000091E : add	// , InitJoin, -1 - SAL : 385
	0x00000920 : pushc		2	// , InitJoin, -1 - SAL : 386
	0x00000924 : add	// , InitJoin, -1 - SAL : 387
	0x00000926 : pushz		46 ( stationIdC of Function InitJoin )	// , InitJoin, -1 - SAL : 388
	0x0000092A : sta	// , InitJoin, -1 - SAL : 389
	0x0000092C : ret	// , InitJoin, -1 - SAL : 390
}


FUNCTION : InitJointList()
{
	0x0000092E : nop	// , InitJointList, -1 - SAL : 806
	0x00000930 : zsetc		29 ( saveJointListSize )		0	// , InitJointList, -1 - SAL : 807
	0x00000936 : ret	// , InitJointList, -1 - SAL : 808
}


FUNCTION : InitResultPath()
{
	0x00000938 : nop	// , InitResultPath, -1 - SAL : 996
	0x0000093A : zsetc		33 ( resultPathSize )		0	// , InitResultPath, -1 - SAL : 997
	0x00000940 : ret	// , InitResultPath, -1 - SAL : 998
}


FUNCTION : InitSubway()
{
	0x00000942 : nop	// , InitSubway, -1 - SAL : 436
	0x00000944 : zsetc		49 ( i of Function InitSubway )		0	// , InitSubway, -1 - SAL : 437
	0x0000094A : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 438
	0x0000094E : gejp		10		0x000009D2	// , InitSubway, -1 - SAL : 439
	0x00000956 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 440
	0x0000095A : pushc		2	// , InitSubway, -1 - SAL : 441
	0x0000095E : mult	// , InitSubway, -1 - SAL : 442
	0x00000960 : ldrz		20 ( StationA )	// , InitSubway, -1 - SAL : 443
	0x00000964 : add	// , InitSubway, -1 - SAL : 444
	0x00000966 : pushi		27 ( stationName )		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 445
	0x0000096C : sta	// , InitSubway, -1 - SAL : 446
	0x0000096E : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 447
	0x00000972 : pushc		3	// , InitSubway, -1 - SAL : 448
	0x00000976 : mult	// , InitSubway, -1 - SAL : 449
	0x00000978 : ldrz		23 ( NodeA )	// , InitSubway, -1 - SAL : 450
	0x0000097C : add	// , InitSubway, -1 - SAL : 451
	0x0000097E : pushc		2	// , InitSubway, -1 - SAL : 452
	0x00000982 : add	// , InitSubway, -1 - SAL : 453
	0x00000984 : pushc		3	// , InitSubway, -1 - SAL : 454
	0x00000988 : sta	// , InitSubway, -1 - SAL : 455
	0x0000098A : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 456
	0x0000098E : gejp		9		0x000009C6	// , InitSubway, -1 - SAL : 457
	0x00000996 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 458
	0x0000099A : pushc		3	// , InitSubway, -1 - SAL : 459
	0x0000099E : mult	// , InitSubway, -1 - SAL : 460
	0x000009A0 : ldrz		23 ( NodeA )	// , InitSubway, -1 - SAL : 461
	0x000009A4 : add	// , InitSubway, -1 - SAL : 462
	0x000009A6 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 463
	0x000009AA : sta	// , InitSubway, -1 - SAL : 464
	0x000009AC : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 465
	0x000009B0 : pushc		3	// , InitSubway, -1 - SAL : 466
	0x000009B4 : mult	// , InitSubway, -1 - SAL : 467
	0x000009B6 : ldrz		23 ( NodeA )	// , InitSubway, -1 - SAL : 468
	0x000009BA : add	// , InitSubway, -1 - SAL : 469
	0x000009BC : inc	// , InitSubway, -1 - SAL : 470
	0x000009BE : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 471
	0x000009C2 : inc	// , InitSubway, -1 - SAL : 472
	0x000009C4 : sta	// , InitSubway, -1 - SAL : 473
	0x000009C6 : incz		49 ( i of Function InitSubway )		1	// , InitSubway, -1 - SAL : 474
	0x000009CC : ujp		0x0000094A	// , InitSubway, -1 - SAL : 475
	0x000009D2 : zsetc		49 ( i of Function InitSubway )		0	// , InitSubway, -1 - SAL : 476
	0x000009D8 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 477
	0x000009DC : gejp		10		0x00000A6C	// , InitSubway, -1 - SAL : 478
	0x000009E4 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 479
	0x000009E8 : pushc		2	// , InitSubway, -1 - SAL : 480
	0x000009EC : mult	// , InitSubway, -1 - SAL : 481
	0x000009EE : ldrz		21 ( StationB )	// , InitSubway, -1 - SAL : 482
	0x000009F2 : add	// , InitSubway, -1 - SAL : 483
	0x000009F4 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 484
	0x000009F8 : pushc		10	// , InitSubway, -1 - SAL : 485
	0x000009FC : add	// , InitSubway, -1 - SAL : 486
	0x000009FE : ldrz		27 ( stationName )	// , InitSubway, -1 - SAL : 487
	0x00000A02 : add	// , InitSubway, -1 - SAL : 488
	0x00000A04 : ixa	// , InitSubway, -1 - SAL : 489
	0x00000A06 : sta	// , InitSubway, -1 - SAL : 490
	0x00000A08 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 491
	0x00000A0C : pushc		3	// , InitSubway, -1 - SAL : 492
	0x00000A10 : mult	// , InitSubway, -1 - SAL : 493
	0x00000A12 : ldrz		24 ( NodeB )	// , InitSubway, -1 - SAL : 494
	0x00000A16 : add	// , InitSubway, -1 - SAL : 495
	0x00000A18 : pushc		2	// , InitSubway, -1 - SAL : 496
	0x00000A1C : add	// , InitSubway, -1 - SAL : 497
	0x00000A1E : pushc		3	// , InitSubway, -1 - SAL : 498
	0x00000A22 : sta	// , InitSubway, -1 - SAL : 499
	0x00000A24 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 500
	0x00000A28 : gejp		9		0x00000A60	// , InitSubway, -1 - SAL : 501
	0x00000A30 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 502
	0x00000A34 : pushc		3	// , InitSubway, -1 - SAL : 503
	0x00000A38 : mult	// , InitSubway, -1 - SAL : 504
	0x00000A3A : ldrz		24 ( NodeB )	// , InitSubway, -1 - SAL : 505
	0x00000A3E : add	// , InitSubway, -1 - SAL : 506
	0x00000A40 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 507
	0x00000A44 : sta	// , InitSubway, -1 - SAL : 508
	0x00000A46 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 509
	0x00000A4A : pushc		3	// , InitSubway, -1 - SAL : 510
	0x00000A4E : mult	// , InitSubway, -1 - SAL : 511
	0x00000A50 : ldrz		24 ( NodeB )	// , InitSubway, -1 - SAL : 512
	0x00000A54 : add	// , InitSubway, -1 - SAL : 513
	0x00000A56 : inc	// , InitSubway, -1 - SAL : 514
	0x00000A58 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 515
	0x00000A5C : inc	// , InitSubway, -1 - SAL : 516
	0x00000A5E : sta	// , InitSubway, -1 - SAL : 517
	0x00000A60 : incz		49 ( i of Function InitSubway )		1	// , InitSubway, -1 - SAL : 518
	0x00000A66 : ujp		0x000009D8	// , InitSubway, -1 - SAL : 519
	0x00000A6C : zsetc		49 ( i of Function InitSubway )		0	// , InitSubway, -1 - SAL : 520
	0x00000A72 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 521
	0x00000A76 : gejp		10		0x00000B06	// , InitSubway, -1 - SAL : 522
	0x00000A7E : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 523
	0x00000A82 : pushc		2	// , InitSubway, -1 - SAL : 524
	0x00000A86 : mult	// , InitSubway, -1 - SAL : 525
	0x00000A88 : ldrz		22 ( StationC )	// , InitSubway, -1 - SAL : 526
	0x00000A8C : add	// , InitSubway, -1 - SAL : 527
	0x00000A8E : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 528
	0x00000A92 : pushc		20	// , InitSubway, -1 - SAL : 529
	0x00000A96 : add	// , InitSubway, -1 - SAL : 530
	0x00000A98 : ldrz		27 ( stationName )	// , InitSubway, -1 - SAL : 531
	0x00000A9C : add	// , InitSubway, -1 - SAL : 532
	0x00000A9E : ixa	// , InitSubway, -1 - SAL : 533
	0x00000AA0 : sta	// , InitSubway, -1 - SAL : 534
	0x00000AA2 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 535
	0x00000AA6 : pushc		3	// , InitSubway, -1 - SAL : 536
	0x00000AAA : mult	// , InitSubway, -1 - SAL : 537
	0x00000AAC : ldrz		25 ( NodeC )	// , InitSubway, -1 - SAL : 538
	0x00000AB0 : add	// , InitSubway, -1 - SAL : 539
	0x00000AB2 : pushc		2	// , InitSubway, -1 - SAL : 540
	0x00000AB6 : add	// , InitSubway, -1 - SAL : 541
	0x00000AB8 : pushc		3	// , InitSubway, -1 - SAL : 542
	0x00000ABC : sta	// , InitSubway, -1 - SAL : 543
	0x00000ABE : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 544
	0x00000AC2 : gejp		9		0x00000AFA	// , InitSubway, -1 - SAL : 545
	0x00000ACA : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 546
	0x00000ACE : pushc		3	// , InitSubway, -1 - SAL : 547
	0x00000AD2 : mult	// , InitSubway, -1 - SAL : 548
	0x00000AD4 : ldrz		25 ( NodeC )	// , InitSubway, -1 - SAL : 549
	0x00000AD8 : add	// , InitSubway, -1 - SAL : 550
	0x00000ADA : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 551
	0x00000ADE : sta	// , InitSubway, -1 - SAL : 552
	0x00000AE0 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 553
	0x00000AE4 : pushc		3	// , InitSubway, -1 - SAL : 554
	0x00000AE8 : mult	// , InitSubway, -1 - SAL : 555
	0x00000AEA : ldrz		25 ( NodeC )	// , InitSubway, -1 - SAL : 556
	0x00000AEE : add	// , InitSubway, -1 - SAL : 557
	0x00000AF0 : inc	// , InitSubway, -1 - SAL : 558
	0x00000AF2 : pushz		49 ( i of Function InitSubway )	// , InitSubway, -1 - SAL : 559
	0x00000AF6 : inc	// , InitSubway, -1 - SAL : 560
	0x00000AF8 : sta	// , InitSubway, -1 - SAL : 561
	0x00000AFA : incz		49 ( i of Function InitSubway )		1	// , InitSubway, -1 - SAL : 562
	0x00000B00 : ujp		0x00000A72	// , InitSubway, -1 - SAL : 563
	0x00000B06 : pushc		0	// , InitSubway, -1 - SAL : 564
	0x00000B0A : pushc		106	// , InitSubway, -1 - SAL : 565
	0x00000B0E : pushc		206	// , InitSubway, -1 - SAL : 566
	0x00000B12 : pushc		-1	// , InitSubway, -1 - SAL : 567
	0x00000B16 : call		0x000008D4	// , InitSubway, -1 - SAL : 568
	0x00000B1C : pushc		1	// , InitSubway, -1 - SAL : 569
	0x00000B20 : pushc		108	// , InitSubway, -1 - SAL : 570
	0x00000B24 : pushc		308	// , InitSubway, -1 - SAL : 571
	0x00000B28 : pushc		-1	// , InitSubway, -1 - SAL : 572
	0x00000B2C : call		0x000008D4	// , InitSubway, -1 - SAL : 573
	0x00000B32 : pushc		2	// , InitSubway, -1 - SAL : 574
	0x00000B36 : pushc		203	// , InitSubway, -1 - SAL : 575
	0x00000B3A : pushc		303	// , InitSubway, -1 - SAL : 576
	0x00000B3E : pushc		-1	// , InitSubway, -1 - SAL : 577
	0x00000B42 : call		0x000008D4	// , InitSubway, -1 - SAL : 578
	0x00000B48 : pushc		3	// , InitSubway, -1 - SAL : 579
	0x00000B4C : pushc		208	// , InitSubway, -1 - SAL : 580
	0x00000B50 : pushc		306	// , InitSubway, -1 - SAL : 581
	0x00000B54 : pushc		-1	// , InitSubway, -1 - SAL : 582
	0x00000B58 : call		0x000008D4	// , InitSubway, -1 - SAL : 583
	0x00000B5E : ret	// , InitSubway, -1 - SAL : 584
}


FUNCTION : IntervalSort()
{
	0x00000B60 : nop	// , IntervalSort, -1 - SAL : 618
	0x00000B62 : popz		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 619
	0x00000B66 : popz		56 ( end of Function IntervalSort )	// , IntervalSort, -1 - SAL : 620
	0x00000B6A : stnz		55 ( begin of Function IntervalSort )	// , IntervalSort, -1 - SAL : 621
	0x00000B6E : addz		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 622
	0x00000B72 : popz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 624
	0x00000B76 : pushz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 625
	0x00000B7A : pushz		56 ( end of Function IntervalSort )	// , IntervalSort, -1 - SAL : 626
	0x00000B7E : le	// , IntervalSort, -1 - SAL : 627
	0x00000B80 : fjp		0x00000D22	// , IntervalSort, -1 - SAL : 628
	0x00000B86 : ldrz		58 ( joint of Function IntervalSort )	// , IntervalSort, -1 - SAL : 629
	0x00000B8A : pushz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 630
	0x00000B8E : pushc		3	// , IntervalSort, -1 - SAL : 631
	0x00000B92 : mult	// , IntervalSort, -1 - SAL : 632
	0x00000B94 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 633
	0x00000B98 : add	// , IntervalSort, -1 - SAL : 634
	0x00000B9A : ixa	// , IntervalSort, -1 - SAL : 635
	0x00000B9C : sta	// , IntervalSort, -1 - SAL : 636
	0x00000B9E : ldrz		58 ( joint of Function IntervalSort )	// , IntervalSort, -1 - SAL : 637
	0x00000BA2 : inc	// , IntervalSort, -1 - SAL : 638
	0x00000BA4 : pushz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 639
	0x00000BA8 : pushc		3	// , IntervalSort, -1 - SAL : 640
	0x00000BAC : mult	// , IntervalSort, -1 - SAL : 641
	0x00000BAE : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 642
	0x00000BB2 : add	// , IntervalSort, -1 - SAL : 643
	0x00000BB4 : inc	// , IntervalSort, -1 - SAL : 644
	0x00000BB6 : ixa	// , IntervalSort, -1 - SAL : 645
	0x00000BB8 : sta	// , IntervalSort, -1 - SAL : 646
	0x00000BBA : addldrzc		58 ( joint of Function IntervalSort )		2	// , IntervalSort, -1 - SAL : 647
	0x00000BC0 : pushz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 650
	0x00000BC4 : pushc		3	// , IntervalSort, -1 - SAL : 651
	0x00000BC8 : mult	// , IntervalSort, -1 - SAL : 652
	0x00000BCA : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 653
	0x00000BCE : add	// , IntervalSort, -1 - SAL : 654
	0x00000BD0 : pushc		2	// , IntervalSort, -1 - SAL : 655
	0x00000BD4 : add	// , IntervalSort, -1 - SAL : 656
	0x00000BD6 : ixa	// , IntervalSort, -1 - SAL : 657
	0x00000BD8 : sta	// , IntervalSort, -1 - SAL : 658
	0x00000BDA : pushz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 659
	0x00000BDE : pushz		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 660
	0x00000BE2 : sub	// , IntervalSort, -1 - SAL : 661
	0x00000BE4 : popz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 662
	0x00000BE8 : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 663
	0x00000BEC : pushz		55 ( begin of Function IntervalSort )	// , IntervalSort, -1 - SAL : 664
	0x00000BF0 : ge	// , IntervalSort, -1 - SAL : 665
	0x00000BF2 : dup	// , IntervalSort, -1 - SAL : 666
	0x00000BF4 : fjp		0x00000C1C	// , IntervalSort, -1 - SAL : 667
	0x00000BFA : popz		17 ( swReserved3 )	// , IntervalSort, -1 - SAL : 668
	0x00000BFE : ldrz		58 ( joint of Function IntervalSort )	// , IntervalSort, -1 - SAL : 669
	0x00000C02 : inc	// , IntervalSort, -1 - SAL : 670
	0x00000C04 : ixa	// , IntervalSort, -1 - SAL : 671
	0x00000C06 : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 672
	0x00000C0A : pushc		3	// , IntervalSort, -1 - SAL : 673
	0x00000C0E : mult	// , IntervalSort, -1 - SAL : 674
	0x00000C10 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 675
	0x00000C14 : add	// , IntervalSort, -1 - SAL : 676
	0x00000C16 : inc	// , IntervalSort, -1 - SAL : 677
	0x00000C18 : ixa	// , IntervalSort, -1 - SAL : 678
	0x00000C1A : lt	// , IntervalSort, -1 - SAL : 679
	0x00000C1C : fjp		0x00000CB8	// , IntervalSort, -1 - SAL : 680
	0x00000C22 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 681
	0x00000C28 : pushc		3	// , IntervalSort, -1 - SAL : 684
	0x00000C2C : mult	// , IntervalSort, -1 - SAL : 685
	0x00000C2E : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 686
	0x00000C32 : add	// , IntervalSort, -1 - SAL : 687
	0x00000C34 : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 688
	0x00000C38 : pushc		3	// , IntervalSort, -1 - SAL : 689
	0x00000C3C : mult	// , IntervalSort, -1 - SAL : 690
	0x00000C3E : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 691
	0x00000C42 : add	// , IntervalSort, -1 - SAL : 692
	0x00000C44 : ixa	// , IntervalSort, -1 - SAL : 693
	0x00000C46 : sta	// , IntervalSort, -1 - SAL : 694
	0x00000C48 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 695
	0x00000C4E : pushc		3	// , IntervalSort, -1 - SAL : 698
	0x00000C52 : mult	// , IntervalSort, -1 - SAL : 699
	0x00000C54 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 700
	0x00000C58 : add	// , IntervalSort, -1 - SAL : 701
	0x00000C5A : inc	// , IntervalSort, -1 - SAL : 702
	0x00000C5C : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 703
	0x00000C60 : pushc		3	// , IntervalSort, -1 - SAL : 704
	0x00000C64 : mult	// , IntervalSort, -1 - SAL : 705
	0x00000C66 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 706
	0x00000C6A : add	// , IntervalSort, -1 - SAL : 707
	0x00000C6C : inc	// , IntervalSort, -1 - SAL : 708
	0x00000C6E : ixa	// , IntervalSort, -1 - SAL : 709
	0x00000C70 : sta	// , IntervalSort, -1 - SAL : 710
	0x00000C72 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 711
	0x00000C78 : pushc		3	// , IntervalSort, -1 - SAL : 714
	0x00000C7C : mult	// , IntervalSort, -1 - SAL : 715
	0x00000C7E : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 716
	0x00000C82 : add	// , IntervalSort, -1 - SAL : 717
	0x00000C84 : pushc		2	// , IntervalSort, -1 - SAL : 718
	0x00000C88 : add	// , IntervalSort, -1 - SAL : 719
	0x00000C8A : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 720
	0x00000C8E : pushc		3	// , IntervalSort, -1 - SAL : 721
	0x00000C92 : mult	// , IntervalSort, -1 - SAL : 722
	0x00000C94 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 723
	0x00000C98 : add	// , IntervalSort, -1 - SAL : 724
	0x00000C9A : pushc		2	// , IntervalSort, -1 - SAL : 725
	0x00000C9E : add	// , IntervalSort, -1 - SAL : 726
	0x00000CA0 : ixa	// , IntervalSort, -1 - SAL : 727
	0x00000CA2 : sta	// , IntervalSort, -1 - SAL : 728
	0x00000CA4 : pushz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 729
	0x00000CA8 : pushz		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 730
	0x00000CAC : sub	// , IntervalSort, -1 - SAL : 731
	0x00000CAE : popz		60 ( j of Function IntervalSort )	// , IntervalSort, -1 - SAL : 732
	0x00000CB2 : ujp		0x00000BE8	// , IntervalSort, -1 - SAL : 733
	0x00000CB8 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 734
	0x00000CBE : pushc		3	// , IntervalSort, -1 - SAL : 737
	0x00000CC2 : mult	// , IntervalSort, -1 - SAL : 738
	0x00000CC4 : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 739
	0x00000CC8 : add	// , IntervalSort, -1 - SAL : 740
	0x00000CCA : ldrz		58 ( joint of Function IntervalSort )	// , IntervalSort, -1 - SAL : 741
	0x00000CCE : ixa	// , IntervalSort, -1 - SAL : 742
	0x00000CD0 : sta	// , IntervalSort, -1 - SAL : 743
	0x00000CD2 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 744
	0x00000CD8 : pushc		3	// , IntervalSort, -1 - SAL : 747
	0x00000CDC : mult	// , IntervalSort, -1 - SAL : 748
	0x00000CDE : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 749
	0x00000CE2 : add	// , IntervalSort, -1 - SAL : 750
	0x00000CE4 : inc	// , IntervalSort, -1 - SAL : 751
	0x00000CE6 : ldrz		58 ( joint of Function IntervalSort )	// , IntervalSort, -1 - SAL : 752
	0x00000CEA : inc	// , IntervalSort, -1 - SAL : 753
	0x00000CEC : ixa	// , IntervalSort, -1 - SAL : 754
	0x00000CEE : sta	// , IntervalSort, -1 - SAL : 755
	0x00000CF0 : addzz		60 ( j of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 756
	0x00000CF6 : pushc		3	// , IntervalSort, -1 - SAL : 759
	0x00000CFA : mult	// , IntervalSort, -1 - SAL : 760
	0x00000CFC : ldrz		30 ( foundJoint )	// , IntervalSort, -1 - SAL : 761
	0x00000D00 : add	// , IntervalSort, -1 - SAL : 762
	0x00000D02 : pushc		2	// , IntervalSort, -1 - SAL : 763
	0x00000D06 : add	// , IntervalSort, -1 - SAL : 764
	0x00000D08 : addldrzc		58 ( joint of Function IntervalSort )		2	// , IntervalSort, -1 - SAL : 765
	0x00000D0E : ixa	// , IntervalSort, -1 - SAL : 768
	0x00000D10 : sta	// , IntervalSort, -1 - SAL : 769
	0x00000D12 : addzz		59 ( i of Function IntervalSort )		57 ( interval of Function IntervalSort )	// , IntervalSort, -1 - SAL : 770
	0x00000D18 : popz		59 ( i of Function IntervalSort )	// , IntervalSort, -1 - SAL : 773
	0x00000D1C : ujp		0x00000B76	// , IntervalSort, -1 - SAL : 774
	0x00000D22 : ret	// , IntervalSort, -1 - SAL : 775
}


FUNCTION : ReverseResultPath()
{
	0x00000D24 : nop	// , ReverseResultPath, -1 - SAL : 1004
	0x00000D26 : pushz		33 ( resultPathSize )	// , ReverseResultPath, -1 - SAL : 1005
	0x00000D2A : pushc		2	// , ReverseResultPath, -1 - SAL : 1006
	0x00000D2E : div	// , ReverseResultPath, -1 - SAL : 1007
	0x00000D30 : popz		74 ( loopCount of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1008
	0x00000D34 : zsetc		76 ( i of Function ReverseResultPath )		0	// , ReverseResultPath, -1 - SAL : 1009
	0x00000D3A : pushz		76 ( i of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1010
	0x00000D3E : pushz		74 ( loopCount of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1011
	0x00000D42 : lt	// , ReverseResultPath, -1 - SAL : 1012
	0x00000D44 : fjp		0x00000D96	// , ReverseResultPath, -1 - SAL : 1013
	0x00000D4A : zseti		75 ( temp of Function ReverseResultPath )		32 ( resultPath )		76 ( i of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1014
	0x00000D52 : pushz		76 ( i of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1015
	0x00000D56 : ldrz		32 ( resultPath )	// , ReverseResultPath, -1 - SAL : 1016
	0x00000D5A : add	// , ReverseResultPath, -1 - SAL : 1017
	0x00000D5C : pushz		33 ( resultPathSize )	// , ReverseResultPath, -1 - SAL : 1018
	0x00000D60 : dec	// , ReverseResultPath, -1 - SAL : 1019
	0x00000D62 : pushz		76 ( i of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1020
	0x00000D66 : sub	// , ReverseResultPath, -1 - SAL : 1021
	0x00000D68 : ldrz		32 ( resultPath )	// , ReverseResultPath, -1 - SAL : 1022
	0x00000D6C : add	// , ReverseResultPath, -1 - SAL : 1023
	0x00000D6E : ixa	// , ReverseResultPath, -1 - SAL : 1024
	0x00000D70 : sta	// , ReverseResultPath, -1 - SAL : 1025
	0x00000D72 : pushz		33 ( resultPathSize )	// , ReverseResultPath, -1 - SAL : 1026
	0x00000D76 : dec	// , ReverseResultPath, -1 - SAL : 1027
	0x00000D78 : pushz		76 ( i of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1028
	0x00000D7C : sub	// , ReverseResultPath, -1 - SAL : 1029
	0x00000D7E : ldrz		32 ( resultPath )	// , ReverseResultPath, -1 - SAL : 1030
	0x00000D82 : add	// , ReverseResultPath, -1 - SAL : 1031
	0x00000D84 : pushz		75 ( temp of Function ReverseResultPath )	// , ReverseResultPath, -1 - SAL : 1032
	0x00000D88 : sta	// , ReverseResultPath, -1 - SAL : 1033
	0x00000D8A : incz		76 ( i of Function ReverseResultPath )		1	// , ReverseResultPath, -1 - SAL : 1034
	0x00000D90 : ujp		0x00000D3A	// , ReverseResultPath, -1 - SAL : 1035
	0x00000D96 : ret	// , ReverseResultPath, -1 - SAL : 1036
}


FUNCTION : RouteStation()
{
	0x00000D98 : nop	// , RouteStation, -1 - SAL : 1110
	0x00000D9A : popz		86 ( stationEnd of Function RouteStation )	// , RouteStation, -1 - SAL : 1111
	0x00000D9E : popz		85 ( stationStart of Function RouteStation )	// , RouteStation, -1 - SAL : 1112
	0x00000DA2 : zsetc		85 ( stationStart of Function RouteStation )		200	// , RouteStation, -1 - SAL : 1113
	0x00000DA8 : zsetc		86 ( stationEnd of Function RouteStation )		305	// , RouteStation, -1 - SAL : 1114
	0x00000DAE : pushz		85 ( stationStart of Function RouteStation )	// , RouteStation, -1 - SAL : 1115
	0x00000DB2 : call		0x00000468	// , RouteStation, -1 - SAL : 1116
	0x00000DB8 : popz		17 ( swReserved3 )	// , RouteStation, -1 - SAL : 1117
	0x00000DBC : ret	// , RouteStation, -1 - SAL : 1118
}


FUNCTION : Sort()
{
	0x00000DBE : nop	// , Sort, -1 - SAL : 585
	0x00000DC0 : popz		51 ( sortData of Function Sort )	// , Sort, -1 - SAL : 586
	0x00000DC4 : stnz		50 ( size of Function Sort )	// , Sort, -1 - SAL : 587
	0x00000DC8 : pushc		2	// , Sort, -1 - SAL : 588
	0x00000DCC : div	// , Sort, -1 - SAL : 589
	0x00000DCE : popz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 590
	0x00000DD2 : pushz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 591
	0x00000DD6 : ltjp		1		0x00000E42	// , Sort, -1 - SAL : 592
	0x00000DDE : zsetc		52 ( i of Function Sort )		0	// , Sort, -1 - SAL : 593
	0x00000DE4 : pushz		52 ( i of Function Sort )	// , Sort, -1 - SAL : 594
	0x00000DE8 : pushz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 595
	0x00000DEC : lt	// , Sort, -1 - SAL : 596
	0x00000DEE : fjp		0x00000E2E	// , Sort, -1 - SAL : 597
	0x00000DF4 : ssp	// , Sort, -1 - SAL : 598
	0x00000DF6 : pushz		51 ( sortData of Function Sort )	// , Sort, -1 - SAL : 599
	0x00000DFA : dup	// , Sort, -1 - SAL : 600
	0x00000DFC : eqjp		0		0x00000E0C	// , Sort, -1 - SAL : 601
	0x00000E04 : rsp	// , Sort, -1 - SAL : 602
	0x00000E06 : ujp		0x00000E22	// , Sort, -1 - SAL : 603
	0x00000E0C : rsp	// , Sort, -1 - SAL : 604
	0x00000E0E : pushz		52 ( i of Function Sort )	// , Sort, -1 - SAL : 605
	0x00000E12 : pushz		50 ( size of Function Sort )	// , Sort, -1 - SAL : 606
	0x00000E16 : dec	// , Sort, -1 - SAL : 607
	0x00000E18 : pushz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 608
	0x00000E1C : call		0x00000B60	// , Sort, -1 - SAL : 609
	0x00000E22 : incz		52 ( i of Function Sort )		1	// , Sort, -1 - SAL : 610
	0x00000E28 : ujp		0x00000DE4	// , Sort, -1 - SAL : 611
	0x00000E2E : pushz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 612
	0x00000E32 : pushc		2	// , Sort, -1 - SAL : 613
	0x00000E36 : div	// , Sort, -1 - SAL : 614
	0x00000E38 : popz		54 ( interval of Function Sort )	// , Sort, -1 - SAL : 615
	0x00000E3C : ujp		0x00000DD2	// , Sort, -1 - SAL : 616
	0x00000E42 : ret	// , Sort, -1 - SAL : 617
}


FUNCTION : SortFoundJointByTime()
{
	0x00000E44 : nop	// , SortFoundJointByTime, -1 - SAL : 904
	0x00000E46 : pushz		31 ( foundJointSize )	// , SortFoundJointByTime, -1 - SAL : 905
	0x00000E4A : pushc		0	// , SortFoundJointByTime, -1 - SAL : 906
	0x00000E4E : call		0x00000DBE	// , SortFoundJointByTime, -1 - SAL : 907
	0x00000E54 : ret	// , SortFoundJointByTime, -1 - SAL : 908
}


FUNCTION : _AddFoundJoint()
{
	0x00000E56 : nop	// , _AddFoundJoint, -1 - SAL : 1125
	0x00000E58 : popz		87 ( jointIndex of Function _AddFoundJoint )	// , _AddFoundJoint, -1 - SAL : 1126
	0x00000E5C : pushz		34 ( foundJointCount )	// , _AddFoundJoint, -1 - SAL : 1127
	0x00000E60 : gejp		20		0x00000E8A	// , _AddFoundJoint, -1 - SAL : 1128
	0x00000E68 : pushz		34 ( foundJointCount )	// , _AddFoundJoint, -1 - SAL : 1129
	0x00000E6C : pushc		3	// , _AddFoundJoint, -1 - SAL : 1130
	0x00000E70 : mult	// , _AddFoundJoint, -1 - SAL : 1131
	0x00000E72 : ldrz		30 ( foundJoint )	// , _AddFoundJoint, -1 - SAL : 1132
	0x00000E76 : add	// , _AddFoundJoint, -1 - SAL : 1133
	0x00000E78 : pushz		87 ( jointIndex of Function _AddFoundJoint )	// , _AddFoundJoint, -1 - SAL : 1134
	0x00000E7C : sta	// , _AddFoundJoint, -1 - SAL : 1135
	0x00000E7E : incz		34 ( foundJointCount )		1	// , _AddFoundJoint, -1 - SAL : 1136
	0x00000E84 : pushc		1	// , _AddFoundJoint, -1 - SAL : 1137
	0x00000E88 : ret	// , _AddFoundJoint, -1 - SAL : 1138
	0x00000E8A : pushc		0	// , _AddFoundJoint, -1 - SAL : 1139
	0x00000E8E : ret	// , _AddFoundJoint, -1 - SAL : 1140
}


FUNCTION : _FindJoint()
{
	0x00000E90 : nop	// , _FindJoint, -1 - SAL : 1100
	0x00000E92 : popz		83 ( endStation of Function _FindJoint )	// , _FindJoint, -1 - SAL : 1101
	0x00000E96 : popz		82 ( currentStation of Function _FindJoint )	// , _FindJoint, -1 - SAL : 1102
	0x00000E9A : pushc		0	// , _FindJoint, -1 - SAL : 1103
	0x00000E9E : ret	// , _FindJoint, -1 - SAL : 1104
}


FUNCTION : _InitFoundJoint()
{
	0x00000EA0 : nop	// , _InitFoundJoint, -1 - SAL : 1119
	0x00000EA2 : ldrz		30 ( foundJoint )	// , _InitFoundJoint, -1 - SAL : 1120
	0x00000EA6 : pushc		-1	// , _InitFoundJoint, -1 - SAL : 1121
	0x00000EAA : pushc		20	// , _InitFoundJoint, -1 - SAL : 1122
	0x00000EAE : calls		MemSetInt(197)	// , _InitFoundJoint, -1 - SAL : 1123
	0x00000EB2 : ret	// , _InitFoundJoint, -1 - SAL : 1124
}


FUNCTION : main()
{
	0x00000EB4 : nop	// , main, -1 - SAL : 1267
	0x00000EB6 : call		0x00000080	// , main, -1 - SAL : 1268
	0x00000EBC : call		0x00000942	// , main, -1 - SAL : 1269
	0x00000EC2 : call		0x000008CA	// , main, -1 - SAL : 1270
	0x00000EC8 : pushc		0	// , main, -1 - SAL : 1271
	0x00000ECC : pushc		305	// , main, -1 - SAL : 1272
	0x00000ED0 : call		0x00000D98	// , main, -1 - SAL : 1273
	0x00000ED6 : pushc		50	// , main, -1 - SAL : 1274
	0x00000EDA : pushc		1	// , main, -1 - SAL : 1275
	0x00000EDE : calls		SetTimer(149)	// , main, -1 - SAL : 1276
	0x00000EE2 : end	// , main, -1 - SAL : 1277
}

====================== SYMBOL TABLE =====================

========================================================
			SYMBOL TABLE

--------------------------------------------------------
	  VALID VAR(STATIC) : 0 - ().swData
	  VALID VAR(STATIC) : 1 - ().swData2
	  VALID VAR(STATIC) : 2 - ().swData3
	  VALID VAR(STATIC) : 3 - ().swData4
	  VALID VAR(STATIC) : 4 - ().swWidth
	  VALID VAR(STATIC) : 5 - ().swHeight
	  VALID VAR(STATIC) : 6 - ().swFrame
	  VALID VAR(STATIC) : 7 - ().swFrame2
	  VALID VAR(STATIC) : 8 - ().swFrame3
	  VALID VAR(STATIC) : 9 - ().swFrame6
	  VALID VAR(STATIC) : 10 - ().swVMver
	  VALID VAR(STATIC) : 11 - ().swModel
	  VALID VAR(STATIC) : 12 - ().swSmsRcvBuf
	  VALID VAR(STATIC) : 13 - ().swRsRcvBuf
	  VALID VAR(STATIC) : 14 - ().swRcvBuf
	  VALID VAR(STATIC) : 15 - ().swReserved1
	  VALID VAR(STATIC) : 16 - ().swReserved2
	  VALID VAR(STATIC) : 17 - ().swReserved3
	  VALID VAR(STATIC) : 18 - ().swReserved4
	  VALID VAR(STATIC) : 19 - ().swSbuf
	  VALID VAR(STATIC) : 20 - ().StationA
	  VALID VAR(STATIC) : 21 - ().StationB
	  VALID VAR(STATIC) : 22 - ().StationC
	  VALID VAR(STATIC) : 23 - ().NodeA
	  VALID VAR(STATIC) : 24 - ().NodeB
	  VALID VAR(STATIC) : 25 - ().NodeC
	  VALID VAR(STATIC) : 26 - ().Joint
	  VALID VAR(STATIC) : 27 - ().stationName
	  VALID VAR(STATIC) : 28 - ().saveJointList
	  VALID VAR(STATIC) : 29 - ().saveJointListSize
	  VALID VAR(STATIC) : 30 - ().foundJoint
	  VALID VAR(STATIC) : 31 - ().foundJointSize
	  VALID VAR(STATIC) : 32 - ().resultPath
	  VALID VAR(STATIC) : 33 - ().resultPathSize
	  VALID VAR(STATIC) : 34 - ().foundJointCount
	  VALID VAR(STATIC) : 35 - DrawInt().x
	  VALID VAR(STATIC) : 36 - DrawInt().y
	  VALID VAR(STATIC) : 37 - DrawInt().value
	  VALID VAR(STATIC) : 38 - DrawInt().tempString
	  VALID VAR(STATIC) : 39 - GetNodeStationA().id
	  VALID VAR(STATIC) : 40 - GetNodeStationB().id
	  VALID VAR(STATIC) : 41 - GetLineNumber().id
	  VALID VAR(STATIC) : 42 - GetLineIndex().id
	  VALID VAR(STATIC) : 43 - InitJoin().index
	  VALID VAR(STATIC) : 44 - InitJoin().stationIdA
	  VALID VAR(STATIC) : 45 - InitJoin().stationIdB
	  VALID VAR(STATIC) : 46 - InitJoin().stationIdC
	  VALID VAR(STATIC) : 47 - GetJointStationId().index
	  VALID VAR(STATIC) : 48 - GetJointStationId().station
	  VALID VAR(STATIC) : 49 - InitSubway().i
	  VALID VAR(STATIC) : 50 - Sort().size
	  VALID VAR(STATIC) : 51 - Sort().sortData
	  VALID VAR(STATIC) : 52 - Sort().i
	  VALID VAR(STATIC) : 53 - Sort().j
	  VALID VAR(STATIC) : 54 - Sort().interval
	  VALID VAR(STATIC) : 55 - IntervalSort().begin
	  VALID VAR(STATIC) : 56 - IntervalSort().end
	  VALID VAR(STATIC) : 57 - IntervalSort().interval
	  VALID VAR(STATIC) : 58 - IntervalSort().joint
	  VALID VAR(STATIC) : 59 - IntervalSort().i
	  VALID VAR(STATIC) : 60 - IntervalSort().j
	  VALID VAR(STATIC) : 61 - AddSaveJoint().id
	  VALID VAR(STATIC) : 62 - AddSaveJoint().time
	  VALID VAR(STATIC) : 63 - AddSaveJoint().prevId
	  VALID VAR(STATIC) : 64 - FindSaveJointById().id
	  VALID VAR(STATIC) : 65 - FindSaveJointById().i
	  VALID VAR(STATIC) : 66 - AddFoundJoint().id
	  VALID VAR(STATIC) : 67 - AddFoundJoint().time
	  VALID VAR(STATIC) : 68 - AddFoundJoint().prevId
	  VALID VAR(STATIC) : 69 - AddFoundJoint().duplicatedFoundJointIndex
	  VALID VAR(STATIC) : 70 - FindFoundJointById().id
	  VALID VAR(STATIC) : 71 - FindFoundJointById().i
	  VALID VAR(STATIC) : 72 - DelFrontFoundJoint().i
	  VALID VAR(STATIC) : 73 - AddResultPath().saveJointListIndex
	  VALID VAR(STATIC) : 74 - ReverseResultPath().loopCount
	  VALID VAR(STATIC) : 75 - ReverseResultPath().temp
	  VALID VAR(STATIC) : 76 - ReverseResultPath().i
	  VALID VAR(STATIC) : 77 - FindPath().startStation
	  VALID VAR(STATIC) : 78 - FindPath().endStation
	  VALID VAR(STATIC) : 79 - FindPath().prevJointId
	  VALID VAR(STATIC) : 80 - FindPath().result
	  VALID VAR(STATIC) : 81 - FindPath().i
	  VALID VAR(STATIC) : 82 - _FindJoint().currentStation
	  VALID VAR(STATIC) : 83 - _FindJoint().endStation
	  VALID VAR(STATIC) : 84 - CopyToSaveJoint().index
	  VALID VAR(STATIC) : 85 - RouteStation().stationStart
	  VALID VAR(STATIC) : 86 - RouteStation().stationEnd
	  VALID VAR(STATIC) : 87 - _AddFoundJoint().jointIndex
	  VALID VAR(STATIC) : 88 - GetFoundJoint().index
	  VALID VAR(STATIC) : 89 - FindJoint().currentId
	  VALID VAR(STATIC) : 90 - FindJoint().currentLine
	  VALID VAR(STATIC) : 91 - FindJoint().currentLineIndex
	  VALID VAR(STATIC) : 92 - FindJoint().i
	  VALID VAR(STATIC) : 93 - DrawMetro().i
========================================================

============================== SYMBOL POOL ==============================
0  th SYMBOL POOL[0x000011D8] : Real Offset 0x000011D4
1  th SYMBOL POOL[0x000011DC] : Real Offset 0x000011D8
2  th SYMBOL POOL[0x000011E0] : Real Offset 0x000011DC
3  th SYMBOL POOL[0x000011E4] : Real Offset 0x000011E0
4  th SYMBOL POOL[0x000011E8] : Real Offset 0x000011E4
5  th SYMBOL POOL[0x000011EC] : Real Offset 0x000011E8
6  th SYMBOL POOL[0x000011F0] : Real Offset 0x000011EC
7  th SYMBOL POOL[0x000011F4] : Real Offset 0x000011F0
8  th SYMBOL POOL[0x000011F8] : Real Offset 0x000011F4
9  th SYMBOL POOL[0x000011FC] : Real Offset 0x000011F8
10 th SYMBOL POOL[0x00001200] : Real Offset 0x000011FC
11 th SYMBOL POOL[0x0000120C] : Real Offset 0x00001208
12 th SYMBOL POOL[0x0000122C] : Real Offset 0x00001228
13 th SYMBOL POOL[0x000012D0] : Real Offset 0x000012CC
14 th SYMBOL POOL[0x000014D0] : Real Offset 0x000014CC
15 th SYMBOL POOL[0x000018D0] : Real Offset 0x000018CC
16 th SYMBOL POOL[0x000018D4] : Real Offset 0x000018D0
17 th SYMBOL POOL[0x000018D8] : Real Offset 0x000018D4
18 th SYMBOL POOL[0x000018DC] : Real Offset 0x000018D8
19 th SYMBOL POOL[0x000018E0] : Real Offset 0x000018DC
20 th SYMBOL POOL[0x000018E4] : Real Offset 0x000018E0
21 th SYMBOL POOL[0x00001934] : Real Offset 0x00001930
22 th SYMBOL POOL[0x00001984] : Real Offset 0x00001980
23 th SYMBOL POOL[0x000019D4] : Real Offset 0x000019D0
24 th SYMBOL POOL[0x00001A40] : Real Offset 0x00001A3C
25 th SYMBOL POOL[0x00001AAC] : Real Offset 0x00001AA8
26 th SYMBOL POOL[0x00001B18] : Real Offset 0x00001B14
27 th SYMBOL POOL[0x00001B90] : Real Offset 0x00001B8C
28 th SYMBOL POOL[0x00001C08] : Real Offset 0x00001C04
29 th SYMBOL POOL[0x00001CF8] : Real Offset 0x00001CF4
30 th SYMBOL POOL[0x00001CFC] : Real Offset 0x00001CF8
31 th SYMBOL POOL[0x00001E64] : Real Offset 0x00001E60
32 th SYMBOL POOL[0x00001E68] : Real Offset 0x00001E64
33 th SYMBOL POOL[0x00001E90] : Real Offset 0x00001E8C
34 th SYMBOL POOL[0x00001E94] : Real Offset 0x00001E90
35 th SYMBOL POOL[0x00001E98] : Real Offset 0x00001E94
36 th SYMBOL POOL[0x00001E9C] : Real Offset 0x00001E98
37 th SYMBOL POOL[0x00001EA0] : Real Offset 0x00001E9C
38 th SYMBOL POOL[0x00001EA4] : Real Offset 0x00001EA0
39 th SYMBOL POOL[0x00001EA8] : Real Offset 0x00001EA4
40 th SYMBOL POOL[0x00001EAC] : Real Offset 0x00001EA8
41 th SYMBOL POOL[0x00001EB0] : Real Offset 0x00001EAC
42 th SYMBOL POOL[0x00001EB4] : Real Offset 0x00001EB0
43 th SYMBOL POOL[0x00001EB8] : Real Offset 0x00001EB4
44 th SYMBOL POOL[0x00001EBC] : Real Offset 0x00001EB8
45 th SYMBOL POOL[0x00001EC0] : Real Offset 0x00001EBC
46 th SYMBOL POOL[0x00001EC4] : Real Offset 0x00001EC0
47 th SYMBOL POOL[0x00001EC8] : Real Offset 0x00001EC4
48 th SYMBOL POOL[0x00001ECC] : Real Offset 0x00001EC8
49 th SYMBOL POOL[0x00001ED0] : Real Offset 0x00001ECC
50 th SYMBOL POOL[0x00001ED4] : Real Offset 0x00001ED0
51 th SYMBOL POOL[0x00001ED8] : Real Offset 0x00001ED4
52 th SYMBOL POOL[0x00001EDC] : Real Offset 0x00001ED8
53 th SYMBOL POOL[0x00001EE0] : Real Offset 0x00001EDC
54 th SYMBOL POOL[0x00001EE4] : Real Offset 0x00001EE0
55 th SYMBOL POOL[0x00001EE8] : Real Offset 0x00001EE4
56 th SYMBOL POOL[0x00001EEC] : Real Offset 0x00001EE8
57 th SYMBOL POOL[0x00001EF0] : Real Offset 0x00001EEC
58 th SYMBOL POOL[0x00001EF4] : Real Offset 0x00001EF0
59 th SYMBOL POOL[0x00001F00] : Real Offset 0x00001EFC
60 th SYMBOL POOL[0x00001F04] : Real Offset 0x00001F00
61 th SYMBOL POOL[0x00001F08] : Real Offset 0x00001F04
62 th SYMBOL POOL[0x00001F0C] : Real Offset 0x00001F08
63 th SYMBOL POOL[0x00001F10] : Real Offset 0x00001F0C
64 th SYMBOL POOL[0x00001F14] : Real Offset 0x00001F10
65 th SYMBOL POOL[0x00001F18] : Real Offset 0x00001F14
66 th SYMBOL POOL[0x00001F1C] : Real Offset 0x00001F18
67 th SYMBOL POOL[0x00001F20] : Real Offset 0x00001F1C
68 th SYMBOL POOL[0x00001F24] : Real Offset 0x00001F20
69 th SYMBOL POOL[0x00001F28] : Real Offset 0x00001F24
70 th SYMBOL POOL[0x00001F2C] : Real Offset 0x00001F28
71 th SYMBOL POOL[0x00001F30] : Real Offset 0x00001F2C
72 th SYMBOL POOL[0x00001F34] : Real Offset 0x00001F30
73 th SYMBOL POOL[0x00001F38] : Real Offset 0x00001F34
74 th SYMBOL POOL[0x00001F3C] : Real Offset 0x00001F38
75 th SYMBOL POOL[0x00001F40] : Real Offset 0x00001F3C
76 th SYMBOL POOL[0x00001F44] : Real Offset 0x00001F40
77 th SYMBOL POOL[0x00001F48] : Real Offset 0x00001F44
78 th SYMBOL POOL[0x00001F4C] : Real Offset 0x00001F48
79 th SYMBOL POOL[0x00001F50] : Real Offset 0x00001F4C
80 th SYMBOL POOL[0x00001F54] : Real Offset 0x00001F50
81 th SYMBOL POOL[0x00001F58] : Real Offset 0x00001F54
82 th SYMBOL POOL[0x00001F5C] : Real Offset 0x00001F58
83 th SYMBOL POOL[0x00001F60] : Real Offset 0x00001F5C
84 th SYMBOL POOL[0x00001F64] : Real Offset 0x00001F60
85 th SYMBOL POOL[0x00001F68] : Real Offset 0x00001F64
86 th SYMBOL POOL[0x00001F6C] : Real Offset 0x00001F68
87 th SYMBOL POOL[0x00001F70] : Real Offset 0x00001F6C
88 th SYMBOL POOL[0x00001F74] : Real Offset 0x00001F70
89 th SYMBOL POOL[0x00001F78] : Real Offset 0x00001F74
90 th SYMBOL POOL[0x00001F7C] : Real Offset 0x00001F78
91 th SYMBOL POOL[0x00001F80] : Real Offset 0x00001F7C
92 th SYMBOL POOL[0x00001F84] : Real Offset 0x00001F80
93 th SYMBOL POOL[0x00001F88] : Real Offset 0x00001F84
